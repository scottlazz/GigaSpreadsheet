{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-a8de5038f8064d25.js","src/app.ts","src/giga/index.ts","src/sheet/components/bottomBar.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/sheet/index.ts","packages/sparsegrid.js","packages/expressionparser.js","packages/financial/FinData.ts","packages/dependencytracker.js","src/sheet/windows/format/index.js","src/sheet/graphs/linechart.js","packages/financial/index.ts","packages/financial/ya.ts","packages/financial/YADATA.json","src/sheet/utils.ts","src/sheet/shiftops.ts","src/sheet/templates.ts","src/sheet/components/contextmenu.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SERVER_PORT = 1234;var HMR_SECURE = false;var HMR_ENV_HASH = \"439701173a9199ea\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"9eacdeebc9112ede\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_SERVER_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */,\n  disposedAssets /*: {|[string]: boolean|} */,\n  assetsToDispose /*: Array<[ParcelRequire, string]> */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */,\n  bundleNotFound = false;\nfunction getHostname() {\n  return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);\n}\n\n// eslint-disable-next-line no-redeclare\nlet WebSocket = globalThis.WebSocket;\nif (!WebSocket && typeof module.bundle.root === 'function') {\n  try {\n    // eslint-disable-next-line no-global-assign\n    WebSocket = module.bundle.root('ws');\n  } catch {\n    // ignore.\n  }\n}\nvar hostname = getHostname();\nvar port = getPort();\nvar protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif (!parent || !parent.isParcelRequire) {\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      // If we're running in the dev server's node runner, listen for messages on the parent port.\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.on('message', async message => {\n          try {\n            await handleMessage(message);\n            parentPort.postMessage('updated');\n          } catch {\n            parentPort.postMessage('restart');\n          }\n        });\n\n        // After the bundle has finished running, notify the dev server that the HMR update is complete.\n        queueMicrotask(() => parentPort.postMessage('ready'));\n      }\n    } catch {\n      if (typeof WebSocket !== 'undefined') {\n        try {\n          ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n        } catch (err) {\n          // Ignore cloudflare workers error.\n          if (err.message && !err.message.includes('Disallowed operation called within global scope')) {\n            console.error(err.message);\n          }\n        }\n      }\n    }\n  }\n  if (ws) {\n    // $FlowFixMe\n    ws.onmessage = async function (event /*: {data: string, ...} */) {\n      var data /*: HMRMessage */ = JSON.parse(event.data);\n      await handleMessage(data);\n    };\n    if (ws instanceof WebSocket) {\n      ws.onerror = function (e) {\n        if (e.message) {\n          console.error(e.message);\n        }\n      };\n      ws.onclose = function () {\n        console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n      };\n    }\n  }\n}\nasync function handleMessage(data /*: HMRMessage */) {\n  checkedAssets = {} /*: {|[string]: boolean|} */;\n  disposedAssets = {} /*: {|[string]: boolean|} */;\n  assetsToAccept = [];\n  assetsToDispose = [];\n  bundleNotFound = false;\n  if (data.type === 'reload') {\n    fullReload();\n  } else if (data.type === 'update') {\n    // Remove error overlay if there is one\n    if (typeof document !== 'undefined') {\n      removeErrorOverlay();\n    }\n    let assets = data.assets;\n\n    // Handle HMR Update\n    let handled = assets.every(asset => {\n      return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n    });\n\n    // Dispatch a custom event in case a bundle was not found. This might mean\n    // an asset on the server changed and we should reload the page. This event\n    // gives the client an opportunity to refresh without losing state\n    // (e.g. via React Server Components). If e.preventDefault() is not called,\n    // we will trigger a full page reload.\n    if (handled && bundleNotFound && assets.some(a => a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n      handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {\n        cancelable: true\n      }));\n    }\n    if (handled) {\n      console.clear();\n\n      // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n      if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n        window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n      }\n      await hmrApplyUpdates(assets);\n      hmrDisposeQueue();\n\n      // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n      let processedAssets = {};\n      for (let i = 0; i < assetsToAccept.length; i++) {\n        let id = assetsToAccept[i][1];\n        if (!processedAssets[id]) {\n          hmrAccept(assetsToAccept[i][0], id);\n          processedAssets[id] = true;\n        }\n      }\n    } else fullReload();\n  }\n  if (data.type === 'error') {\n    // Log parcel errors to console\n    for (let ansiDiagnostic of data.diagnostics.ansi) {\n      let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n      console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n    }\n    if (typeof document !== 'undefined') {\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if (typeof location !== 'undefined' && 'reload' in location) {\n    location.reload();\n  } else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  } else {\n    try {\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.postMessage('restart');\n      }\n    } catch (err) {\n      console.error('[parcel] ⚠️ An HMR update was not accepted. Please restart the process.');\n    }\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout || typeof document === 'undefined') {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  checkedAssets = {};\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else if (a !== null) {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      bundleNotFound = true;\n      return true;\n    }\n    return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return null;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  if (!cached) {\n    return true;\n  }\n  assetsToDispose.push([bundle, id]);\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n  return false;\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","import Giga from \"./giga\";\n\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n    const grid = new Giga('grid-wrapper');\n});","// @ts-ignore\nimport { BottomBar } from 'src/sheet/components/bottomBar';\nimport Sheet from '../sheet';\n// import Sheet from \"src/sheet\";\n\nexport default class Giga {\n    wrapper: HTMLElement;\n    private _container: HTMLDivElement;\n    sheetsContainer: any;\n    addSheetButton: HTMLButtonElement;\n    activeGrids: Map<any, any>;\n    curId: number;\n    curActiveGridId: number;\n    bottomBar: any;\n    constructor(wrapperId: string, options?: any) {\n        this.curId = 1;\n        this.curActiveGridId = 1;\n        this.activeGrids = new Map();\n        this.wrapper = document.getElementById(wrapperId) || document.createElement('div');\n        const _container = document.createElement('div');\n        this._container = _container;\n        _container.style.width = '100%';\n        _container.style.height = '100%';\n        _container.style.display = 'flex';\n        _container.style.flexDirection = 'column';\n        _container.innerHTML = `\n            <div id=\"sheets-container\" class=\"sheets-container\" style=\"display:flex;flex:1;flex-direction:column;height:calc(100% - 40px);\">\n            </div>\n        `;\n        this.bottomBar = new BottomBar();\n        _container.appendChild(this.bottomBar.container);\n        this.wrapper.appendChild(_container);\n        this.addSheetButton = _container.querySelector('.gigasheet-icon-img.add')!;\n        this.sheetsContainer = _container.querySelector('.sheets-container');\n\n        this.initEventListeners();\n        this.initSheets(options);\n    }\n\n    initEventListeners() {\n        this.addSheetButton.onclick = (e) => {\n            e.preventDefault();\n            this.addGrid();\n        }\n        this.bottomBar.onTabClicked((tab: string) => {\n            this.switchTab(tab);\n        })\n    }\n\n    switchTab(tab: string) {\n        const grid = this.activeGrids.get(tab);\n        if (!grid) return;\n        for (let child of this.sheetsContainer.children) {\n            child.style.display = 'none';\n        }\n        grid._container.style.display = 'flex';\n    }\n\n    getDefaultOptions () {\n        return {\n            gridlinesOn: true,\n            // initialCells: [{row: 1, col: 1, text: 'foo'}]\n        };\n    }\n\n    addGrid(options?: any) {\n        for(let child of this.sheetsContainer.children) {\n            child.style.display = 'none';\n        }\n        this.activeGrids.set(String(this.curId++), new Sheet(\n            this.sheetsContainer, options || this.getDefaultOptions()\n        ));\n        this.bottomBar.addTab('Sheet', this.curId-1)\n    }\n\n    initSheets(options?: []) {\n        if (options == null || !(options.length > 0)) {\n            this.addGrid();\n        } else {\n            for(let i = 0; i < options.length; i++) {\n                this.addGrid(options);\n            }\n        }\n    }\n}","export class BottomBar {\n    container: HTMLDivElement;\n    tabCbs: Function[];\n    menu: HTMLElement;\n    active: string | number;\n    constructor() {\n        this.container = document.createElement('div');\n        this.container.className = 'gigasheet-bottombar';\n        this.container.innerHTML = `\n            <div class=\"gigasheet-contextmenu\" style=\"width: 160px; display: none; left: 271px; bottom: 41px;\">\n                <div class=\"gigasheet-item\">Delete</div>\n            </div>\n            <ul class=\"gigasheet-menu\">\n                <li class=\"\">\n                    <div class=\"gigasheet-icon\">\n                        <div class=\"gigasheet-icon-img add\"></div>\n                    </div><span class=\"\">\n                        <div class=\"gigasheet-dropdown top-left\">\n                            <div class=\"gigasheet-dropdown-header\">\n                                <div class=\"gigasheet-icon\">\n                                    <div class=\"gigasheet-icon-img ellipsis\"></div>\n                                </div>\n                            </div>\n                            <div class=\"gigasheet-dropdown-content\" style=\"width: auto; display: none;\">\n                                <div class=\"gigasheet-item\" style=\"width: 150px; font-weight: normal;\">Sheet1</div>\n                            </div>\n                        </div>\n                    </span>\n                </li>\n            </ul>\n        `\n        this.menu = this.container.querySelector('.gigasheet-menu')!;\n        this.active = 1;\n        this.tabCbs = [];\n        this.addListeners();\n    }\n    addListeners() {\n        this.menu.addEventListener('click', (e: any) => {\n            if (e.target.hasAttribute('data-tabid')) {\n                if (e.target.getAttribute('data-tabid') === String(this.active)) return;\n                this.setActive(e.target.getAttribute('data-tabid'));\n            }\n        })\n    }\n    setActive(id: string | number) {\n        const el = this.container.querySelector(`[data-tabid='${id}']`);\n        if (!el) return;\n        this.removeActive();\n        this.active = id;\n        el.classList.add('active');\n        this.emit(id)\n    }\n    emit(value: any) {\n        this.tabCbs.forEach(fn => {\n            fn(value);\n        })\n    }\n    onTabClicked(fn: Function) {\n        this.tabCbs.push(fn);\n    }\n    removeActive() {\n        const tabContainer = this.container.querySelector('.gigasheet-menu')!;\n        for (let tab of tabContainer.children) {\n            tab.classList.remove('active');\n        }\n    }\n    addTab(name: string, id: number) {\n        const container = this.container;\n        this.active = id;\n        const tabContainer = container.querySelector('.gigasheet-menu')!;\n        this.removeActive();\n        if (tabContainer.lastElementChild) {\n            tabContainer.lastElementChild!.insertAdjacentHTML(\n                'afterend',\n                `<li data-tabid=\"${id}\" class=\"active\">Sheet${id}</div>`\n            )\n        } else {\n            tabContainer.innerHTML = '<li data-tabid=\"1\" class=\"active gigasheet-bottom-tab\">Sheet1</li>'\n        }\n    }\n}","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","// @ts-ignore\nimport SparseGrid from 'packages/sparsegrid';\n// @ts-ignore\nimport ExpressionParser from 'packages/expressionparser';\n// @ts-ignore\nimport { launchFormatMenu } from './windows/format';\n// @ts-ignore\nimport { createLineChart } from './graphs/linechart.js';\n// @ts-ignore\nimport FinancialSubscriber from 'packages/financial/index';\n// @ts-ignore\nimport { dependencyTree, tickerReg, shiftDependenciesDown, shiftDependenciesRight, shiftDependenciesUp, shiftDependenciesLeft, removeDependents } from \"packages/dependencytracker\";\n\nimport { hasBorderStr } from \"./utils\";\nimport { shiftTextRefs } from \"./shiftops\";\nimport { header } from './templates';\nimport { Rect, GigaSheetTypeOptions, CellCoordsRect } from './interfaces';\nimport ContextMenu from './components/contextmenu';\n// \"noImplicitAny\": false\n\nexport default class Sheet {\n    wrapper: HTMLElement;\n    container: HTMLElement;\n    headerContainer: HTMLElement;\n    rowNumberContainer: HTMLElement;\n    cornerCell: HTMLElement;\n    selectionLayer: HTMLElement;\n    editInput: HTMLInputElement;\n    lastDevicePixelRatio: number;\n    lastBlockCanvases: number;\n    visibleStartRow: number;\n    visibleEndRow: number;\n    visibleStartCol: number;\n    visibleEndCol: number;\n    rowNumberWidth: number;\n    headerRowHeight: number;\n    cellHeight: number;\n    cellWidth: number;\n    blockRows: number;\n    blockCols: number;\n    paddingBlocks: number;\n    heightOverrides: any;\n    widthOverrides: any;\n    gridlinesOn: boolean;\n    padding: number; // number of adjacent blocks to render\n    readonly MAX_HISTORY_SIZE: number;\n\n    activeBlocks: Map<any, any>;\n    mergedCells: Rect[];\n    undoStack: any;\n    redoStack: any;\n    elRegistry: any;\n    heightAccum: any;\n    widthAccum: any;\n    data: any;\n    parser: any;\n    isResizing: boolean;\n    activeSelection: any;\n    resizeStart: any;\n    resizeInitialSize: any;\n    busy: boolean;\n    rqtimeout: any;\n\n    // Selection state\n    selectedCell: HTMLElement | null;\n    isSelecting: boolean;\n    selectionStart: {row: number, col: number} | null;\n    selectionEnd: { row: number, col: number } | null;\n    selectionHandle: HTMLElement | null;\n    selectedCols: Set<string|number>;\n    selectedRows: Set<string|number>;\n\n    draggingHeader: any;\n    draggingRow: any;\n    editingCell: any;\n    selectionBoundRect: any;\n    mergeButton: HTMLElement;\n    formatButton: HTMLElement;\n    _container: HTMLDivElement;\n    ctxmenu: ContextMenu;\n    constructor(wrapper: HTMLElement, options: GigaSheetTypeOptions | any, state?: any) {\n        this.wrapper = wrapper || document.createElement('div');\n        const _container = document.createElement('div');\n        this._container = _container;\n        _container.style.width = '100%';\n        _container.style.height = '100%';\n        _container.style.display = 'flex';\n        _container.style.flexDirection = 'column';\n        // _container.style.maxHeight = 'calc(100vh - 40px)';\n        _container.innerHTML = `\n        ${header}\n        <div id=\"grid-container\" class=\"grid-container\">\n            <div id=\"corner-cell\" class=\"corner-cell\"></div>\n            <div id=\"header-container\" class=\"header-container\"></div>\n            <div id=\"row-number-container\" class=\"row-number-container\"></div>\n            <div id=\"selection-layer\" class=\"selection-layer\"></div>\n        </div>\n        `;\n        this.container = _container.querySelector('.grid-container')!;\n        this.wrapper.appendChild(_container);\n        this.ctxmenu = new ContextMenu();\n        _container.append(this.ctxmenu.container)\n        // this.container.style.minHeight = '100%';\n        this.container.style.width = '100%';\n        // this.container.style.height = '100%';\n        this.container.style.position = 'relative';\n        this.container.style.overflow = 'auto';\n        this.container.scrollLeft = 0;\n        this.container.scrollTop = 0;\n        this.headerContainer = _container.querySelector('.header-container')!;\n        this.rowNumberContainer = _container.querySelector('.row-number-container')!;\n        this.cornerCell = _container.querySelector('.corner-cell')!;\n        this.selectionLayer = _container.querySelector('.selection-layer')!;\n        this.mergeButton = _container.querySelector('.merge-button')!;\n        this.formatButton = _container.querySelector('.format-button')!;\n        this.lastDevicePixelRatio = window.devicePixelRatio;\n        this.lastBlockCanvases = this.blockCanvases();\n        // const rect = this.container.getBoundingClientRect();\n        // this.cornerCell.style.top = `${rect.y}px`;\n\n        // Configuration\n        this.cellWidth = options.cellWidth ?? 64;\n        this.cellHeight = options.cellHeight ?? 20;\n        this.blockRows = options.blockRows ?? 28;  // Max rows per canvas block\n        this.blockCols = options.blockCols ?? 30;  // Max cols per canvas block\n        this.paddingBlocks = options.paddingBlocks ?? 1; // Extra blocks to render around visible area\n        this.padding = options.padding || 1; // number of adjacent blocks to render\n        this.MAX_HISTORY_SIZE = 100;\n        this.rowNumberWidth = 42;\n        this.headerRowHeight = this.cellHeight || 30;\n        // this.headerContainer.style.height = `${this.headerRowHeight}px`;\n        this.headerContainer.style.lineHeight = `${this.headerRowHeight}px`;\n        this.selectionLayer.style.top = `${this.headerRowHeight}px`;\n        this.selectionLayer.style.left = `${this.rowNumberWidth}px`;\n        this.rowNumberContainer.style.width = `${this.rowNumberWidth}px`;\n        this.rowNumberContainer.style.lineHeight = `${this.headerRowHeight}px`;\n        this.cornerCell.style.width = `${this.rowNumberWidth}px`;\n        this.cornerCell.style.height = `${this.headerRowHeight}px`;\n        this.cornerCell.style.marginTop = `-${this.headerRowHeight + 1}px`; // -1 for border\n        if (options.subscribeFinance) {\n            this.subscribeFinance();\n        }\n\n        // State\n        this.mergedCells = options.mergedCells || [];\n        this.heightOverrides = this.buildOverrides(options.heightOverrides);\n        this.widthOverrides = this.buildOverrides(options.widthOverrides);\n        this.gridlinesOn = options.gridlinesOn ?? true;\n        this.activeBlocks = new Map(); // Track active canvas blocks\n        // window.activeBlocks = this.activeBlocks;\n        // window.renderBlock = this.renderBlock.bind(this);\n        this.undoStack = [];\n        this.redoStack = [];\n        this.elRegistry = {};\n        this.heightAccum = [];\n        this.widthAccum = [];\n        this.isResizing = false;\n        this.resizeStart = null;\n        this.resizeInitialSize = null;\n        this.busy = false;\n\n        // Selection state\n        this.selectedCell = null;\n        this.isSelecting = false;\n        this.selectionStart = null;\n        this.selectionEnd = null;\n        this.selectionHandle = null;\n        this.draggingHeader = null;\n        this.selectedCols = new Set();\n        this.selectedRows = new Set();\n\n        // Metrics\n        this.visibleStartRow = 0;\n        this.visibleEndRow = 0;\n        this.visibleStartCol = 0;\n        this.visibleEndCol = 0;\n\n        // Initialize\n        this.initEventListeners();\n        this.createSelectionHandle();\n        this.addNewSelection();\n\n        // Add edit input element\n        this.editInput = document.createElement('input');\n        this.editInput.className = 'cell-edit-input';\n        this.editInput.style.position = 'absolute';\n        this.editInput.style.display = 'none';\n        this.container.appendChild(this.editInput);\n        this.initRender();\n        this.data = null;\n        this.parser = null;\n        // if (!this.restoreSave()) {\n            this.setData(new SparseGrid(), options.initialCells);\n        // }\n    }\n\n    initRender() {\n        this.updateGridDimensions();\n        this.renderHeaders();\n        this.renderRowNumbers();\n        this.updateVisibleGrid();\n    }\n\n    buildOverrides(overrides: any) {\n        if (!overrides) return [];\n        const _overrides: any = [];\n        for (let key in overrides) {\n            _overrides[key] = overrides[key];\n        }\n        return _overrides;\n    }\n\n    subscribeFinance() {\n        const f = new FinancialSubscriber();\n        f.listenYA([\"API\", \"^GSPC\", \"^DJI\", \"^IXIC\", \"^RUT\", \"CL=F\", \"GC=F\", \"NVDA\", \"GME\", \"RKT\", \"GAP\", \"BLD\", \"IBP\"]);\n        f.onTick((data: any) => {\n            const cells = tickerReg[data.id] || {};\n            for (let key in cells) {\n                const [row,col] = key.split(',');\n                this.renderCell(row,col);\n            }\n            console.log('gigasheet::ontick', data)\n        });\n    }\n\n    initEventListeners() {\n        this.container.addEventListener('scroll', () => {\n            requestAnimationFrame(() => this.handleScroll());\n        });\n\n        const resizeObserver = new ResizeObserver(() => {\n            this.updateGridDimensions();\n            this.updateVisibleGrid();\n            this.updateSelection();\n            this.updateRenderingQuality();\n            // this.contextMenu.style.width = `${130 * this.scaler()}px`;\n            // this.contextMenu.style.fontSize = `${14 * this.scaler()}px`;\n        });\n        resizeObserver.observe(this.container);\n\n        // Selection event listeners\n        this.container.addEventListener('mousedown', this.handleMouseDown.bind(this));\n        document.addEventListener('mousemove', this.handleMouseMove.bind(this));\n        document.addEventListener('mouseup', this.handleMouseUp.bind(this));\n        // Edit event listeners\n        this.container.addEventListener('dblclick', this.handleCellDblClick.bind(this));\n        document.addEventListener('keydown', this.handleKeyDown.bind(this));\n\n        // Copy selected cells to clipboard\n        document.addEventListener('copy', (e) => {\n            if (this.editingCell) return;\n            if (!this.selectionBoundRect) return;\n            const { startRow, startCol, endRow, endCol } = this.selectionBoundRect;\n\n            let clipboardData = '';\n            for (let row = startRow; row <= endRow; row++) {\n                for (let col = startCol; col <= endCol; col++) {\n                    const value = this.getCellText(row, col);\n                    clipboardData += value;\n                    if (col < endCol) clipboardData += '\\t';\n                }\n                if (row < endRow) clipboardData += '\\n';\n            }\n\n            e.clipboardData!.setData('text/plain', clipboardData);\n            e.preventDefault();\n        });\n\n        // Show context menu on right-click\n        this.container.addEventListener('contextmenu', (e: any) => {\n            if ((e.target as HTMLElement).closest('.row-number-container')) return;\n            if ((e.target as HTMLElement).closest('.header-container')) return;\n            if ((e.target as HTMLElement).closest('.corner-cell')) return;\n            if (e.target.closest('.cell-edit-input')) return;\n            e.preventDefault(); // Prevent the default browser context menu\n        });\n\n        this._container.querySelector('.align-button-group')?.addEventListener('click', (e: any) => {\n            // console.log('clicked align buttons', e.target?.getAttribute('data-align'))\n            const textAlign = e.target?.getAttribute('data-align');\n            const selectedCells = this.getSelectedCells();\n            this.setCells(selectedCells, 'textAlign', textAlign);\n        })\n        this._container.querySelector('.quick-text-actions-buttons')?.addEventListener('click', async (e: any) => {\n            // console.log('clicked align buttons', e.target?.getAttribute('data-align'))\n            const action = e.target?.getAttribute('data-action');\n            if (action === 'copy') {\n                document.execCommand('copy');\n            } else if (action === 'paste') {\n                const clipboardText = await navigator.clipboard.readText();\n                this.handlePaste(clipboardText);\n            } else if (action === 'cut') {\n                document.execCommand('copy');\n                this.clearSelectedCells();\n            }\n        })\n        document.addEventListener('paste', (e) => {\n            if (this.editingCell) return;\n            this.handlePaste(e.clipboardData!.getData('text/plain'));\n            e.preventDefault();\n        });\n\n        this.mergeButton.onclick = (e) => {\n            e.preventDefault();\n            this.mergeSelectedCells();\n        }\n        this.formatButton.onclick = (e) => {\n            e.preventDefault();\n            this.openFormatMenu();\n        }\n        this.ctxmenu.onClick(async (action: string) => {\n            if (action === 'copy') {\n                document.execCommand('copy');\n            } else if (action === 'cut') {\n                document.execCommand('copy');\n                this.clearSelectedCells();\n            } else if (action === 'paste') {\n                if (this.editingCell) return;\n                const clipboardText = await navigator.clipboard.readText();\n                this.handlePaste(clipboardText);\n            } else if (action === 'insert-row') {\n                this.insertRow();\n            } else if (action === 'insert-column') {\n                this.insertCol();\n            } else if (action === 'delete-row') {\n                this.deleteRow();\n            } else if (action === 'delete-column') {\n                this.deleteCol();\n            } else if (action === 'clear') {\n                this.clearSelectedCells();\n            } else if (action === 'toggle-gridlines') {\n                this.toggleGridlines();\n                this.forceRerender();\n            } else if (action === 'merge') {\n                this.mergeSelectedCells();\n            } else if (action === 'unmerge') {\n                this.unmergeSelectedCells();\n            }\n        })\n    }\n\n    showContextMenu(x: number, y: number, row: number, col: number) {\n        const rect = this.container.getBoundingClientRect();\n        this.ctxmenu.setPosition(x,y,rect)\n        if (!this.rowColInBounds(row, col, this.selectionBoundRect)) {\n            this.selectCell({ row, col });\n        }\n    }\n\n    deleteRow(row: any = null, record = true) {\n        row = row != null ? row : this.selectionStart?.row;\n        if (row == null) return;\n        const cellsNeedingShift = shiftDependenciesUp(row);\n        for (let [row, col] of cellsNeedingShift) {\n            const newText = shiftTextRefs(this.getCellText(row, col), 'up');\n            this.setText(parseInt(row), parseInt(col), newText)\n        }\n        const rowData = this.data.deleteRow(row);\n        this.mergedCells.forEach((merge: any) => {\n            if (merge.startRow >= row) {\n                merge.startRow--;\n                merge.endRow--;\n            }\n        });\n        const heightOverride = this.heightOverrides[row];\n        delete this.heightOverrides[row];\n        this.shiftHeightOverrides(row, -1);\n        this.updateHeightAccum();\n        this.renderRowNumbers();\n        record && this.recordChanges([{ changeKind: 'deleteEntireRow', row, rowData, heightOverride }]);\n        this.forceRerender();\n        this.selectionBoundRect = this.getBoundingRectCells(this.selectionBoundRect.startRow, this.selectionBoundRect.startCol, this.selectionBoundRect.endRow, this.selectionBoundRect.endCol);\n        this.updateSelection();\n    }\n\n    deleteCol(col: any = null, record = true) {\n        col = col != null ? col : this.selectionStart?.col;\n        if (col == null) return;\n        const cellsNeedingShift = shiftDependenciesLeft(col);\n        for (let [row, col] of cellsNeedingShift) {\n            const newText = shiftTextRefs(this.getCellText(row, col), 'left');\n            this.setText(parseInt(row), parseInt(col), newText)\n        }\n        const colData = this.data.deleteCol(col);\n        this.mergedCells.forEach((merge: any) => {\n            if (merge.startCol >= col) {\n                merge.startCol--;\n                merge.endCol--;\n            }\n        });\n        const widthOverride = this.widthOverrides[col];\n        delete this.widthOverrides[col];\n        this.shiftWidthOverrides(col, -1);\n        this.updateWidthAccum();\n        this.renderHeaders();\n        \n        record && this.recordChanges([{ changeKind: 'deleteEntireCol', col, colData, widthOverride }]);\n        this.forceRerender();\n        this.selectionBoundRect = this.getBoundingRectCells(this.selectionBoundRect.startRow, this.selectionBoundRect.startCol, this.selectionBoundRect.endRow, this.selectionBoundRect.endCol);\n        this.updateSelection();\n    }\n\n    shiftHeightOverrides(pivot: any, amount = 1) {\n        if (amount === -1) {\n            this.heightOverrides.splice(pivot, 1);\n        } else if (amount === 1) {\n            this.heightOverrides.splice(pivot, 0, undefined);\n            delete this.heightOverrides[pivot];\n        }\n    }\n\n    shiftWidthOverrides(pivot: any, amount = 1) {\n        if (amount === -1) {\n            this.widthOverrides.splice(pivot, 1);\n        } else if (amount === 1) {\n            this.widthOverrides.splice(pivot, 0, undefined);\n            delete this.widthOverrides[pivot];\n        }\n    }\n\n    insertRow(row: any = null, data = null, record = true, heightOverride = null) {\n        row = row != null ? row : this.selectionStart?.row;\n        if (row == null) return;\n        const cellsNeedingShift = shiftDependenciesDown(row);\n        for (let [row, col] of cellsNeedingShift) {\n            const newText = shiftTextRefs(this.getCellText(row, col), 'down');\n            this.setText(parseInt(row), parseInt(col), newText)\n        }\n        this.data.addRow(row, data);\n        this.mergedCells.forEach((merge: any) => {\n            if (merge.startRow >= row) {\n                merge.startRow++;\n                merge.endRow++;\n            }\n        });\n        this.shiftHeightOverrides(row, 1);\n        if (heightOverride != null) this.heightOverrides[row] = heightOverride;\n        this.updateHeightAccum();\n        this.renderRowNumbers();\n        record && this.recordChanges([{ changeKind: 'insertEntireRow', row }]);\n        this.forceRerender();\n        this.selectionBoundRect = this.getBoundingRectCells(this.selectionBoundRect.startRow, this.selectionBoundRect.startCol, this.selectionBoundRect.endRow, this.selectionBoundRect.endCol);\n        this.updateSelection();\n    }\n\n    insertCol(col: any = null, data = null, record = true, widthOverride = null) {\n        col = col != null ? col : this.selectionStart?.col;\n        if (col == null) return;\n        const cellsNeedingShift = shiftDependenciesRight(col);\n        for (let [row, col] of cellsNeedingShift) {\n            const newText = shiftTextRefs(this.getCellText(row, col), 'right');\n            this.setText(parseInt(row), parseInt(col), newText)\n        }\n        this.data.addCol(col, data);\n        this.mergedCells.forEach((merge: any) => {\n            if (merge.startCol >= col) {\n                merge.startCol++;\n                merge.endCol++;\n            }\n        });\n        this.shiftWidthOverrides(col, 1);\n        if (widthOverride != null) this.widthOverrides[col] = widthOverride;\n        this.updateWidthAccum();\n        this.renderHeaders();\n        \n        record && this.recordChanges([{ changeKind: 'insertEntireCol', col }]);\n        this.forceRerender();\n        this.selectionBoundRect = this.getBoundingRectCells(this.selectionBoundRect.startRow, this.selectionBoundRect.startCol, this.selectionBoundRect.endRow, this.selectionBoundRect.endCol);\n        this.updateSelection();\n    }\n\n    toggleGridlines() {\n        this.gridlinesOn = !this.gridlinesOn;\n        this.forceRerender();\n    }\n\n    scaler() {\n        return (devicePixelRatio < 1 ? (1 + (1 - devicePixelRatio)) * (1 + (1 - devicePixelRatio)) : 1);\n    }\n\n    // Modify the clearSelectedCells function to record changes\n    clearSelectedCells() {\n        if (!this.selectionBoundRect) return;\n        const { startRow, startCol, endRow, endCol } = this.selectionBoundRect;\n\n        const changes = [];\n        const deletions = [];\n        for (let row = startRow; row <= endRow; row++) {\n            for (let col = startCol; col <= endCol; col++) {\n                const obj = { row, col, previousValue: this.getCellText(row, col), newValue: '', changeKind: 'valchange' };\n                this.clearElRegistry(row, col);\n                deletions.push([row, col]);\n                changes.push(obj);\n            }\n        }\n        this.data.deleteCells(deletions);\n        this.recordChanges(changes);\n\n        for (let [row, col] of deletions) {\n            this.renderCell(row, col);\n        }\n    }\n\n    getColumnName(columnNumber: number) {\n        let columnName = '';\n        while (columnNumber >= 0) {\n            const remainder = columnNumber % 26;\n            columnName = String.fromCharCode(65 + remainder) + columnName;\n            columnNumber = Math.floor(columnNumber / 26) - 1;\n\n            if (columnNumber < 0) break;\n        }\n        return columnName;\n    }\n\n    handlePaste(text: string) {\n        if (!this.selectionBoundRect) return;\n        const { startRow, startCol } = this.selectionBoundRect;\n\n        const clipboardData = text;\n        const rowsData = clipboardData.split('\\n');\n        const changes = []; // To record changes for undo/redo\n\n        for (let i = 0; i < rowsData.length; i++) {\n            const rowData = rowsData[i].split('\\t');\n            for (let j = 0; j < rowData.length; j++) {\n                const row = startRow + i;\n                const col = startCol + j;\n                // if (row <= this.totalRowBounds && col <= this.totalColBounds) {\n                    changes.push({\n                        row,\n                        col,\n                        previousValue: this.getCellText(row, col),\n                        newValue: rowData[j],\n                        changeKind: 'valchange'\n                    });\n                    this.setText(row, col, rowData[j]);\n                    this.renderCell(row, col);\n                // }\n            }\n        }\n        // Record the changes in the undo stack\n        if (changes.length > 0) {\n            this.recordChanges(changes);\n        }\n    }\n\n    // Function to record a change in the history\n    recordChanges(changes: any) {\n        // Clear redo stack when a new change is made\n        this.redoStack = [];\n\n        // Add the change to the undo stack\n        this.undoStack.push(changes);\n\n        // Limit the size of the undo stack\n        if (this.undoStack.length > this.MAX_HISTORY_SIZE) {\n            this.undoStack.shift(); // Remove the oldest change\n        }\n    }\n\n    setWidthOverride(col: any, width: any) {\n        if (width == null) {\n            delete this.widthOverrides[col];\n        } else {\n            this.widthOverrides[col] = width;\n        }\n    }\n\n    setHeightOverride(row: any, height: any) {\n        if (height == null) {\n            delete this.heightOverrides[row];\n        } else {\n            this.heightOverrides[row] = height;\n        }\n    }\n\n    // Function to undo the last change\n    undo() {\n        if (this.undoStack.length === 0) return; // Nothing to undo\n\n        const changes: any = this.undoStack.pop(); // Get the last change\n        const redoChanges = [];\n        const updatedCells = [];\n        let rerender = false;\n        for (const change of changes) {\n            const { row, col, previousValue, changeKind } = change;\n            if (changeKind === 'merge') {\n                this.unmergeSelectedCells(change.bounds, false); rerender = true;\n                redoChanges.push({ changeKind: 'unmerge', bounds: change.bounds });\n            } else if (changeKind === 'unmerge') {\n                this.mergeSelectedCells(change.bounds, false); rerender = true;\n                redoChanges.push({ changeKind: 'merge', bounds: change.bounds });\n            } else if (changeKind === 'deleteEntireRow') {\n                this.insertRow(change.row, change.rowData, false, change.heightOverride); rerender = true;\n                // this.data.addRow(change.row, change.rowData);\n                redoChanges.push({ changeKind: 'deleteEntireRow', row: change.row, rowData: change.rowData, heightOverride: change.heightOverride });\n            } else if (changeKind === 'deleteEntireCol') {\n                this.insertCol(change.col, change.colData, false, change.widthOverride); rerender = true;\n                redoChanges.push({ changeKind: 'deleteEntireCol', col: change.col, colData: change.colData, widthOverride: change.widthOverride });\n            } else if (changeKind === 'insertEntireRow') {\n                this.deleteRow(change.row, false); rerender = true;\n                redoChanges.push({ changeKind: 'insertEntireRow', row: change.row });\n            } else if (changeKind === 'insertEntireCol') {\n                this.deleteCol(change.col, false); rerender = true;\n                redoChanges.push({ changeKind: 'insertEntireCol', col: change.col });\n            } else if (changeKind === 'widthOverrideUpdate') {\n                const prev = this.widthOverrides[change.col];\n                this.setWidthOverride(change.col, change.value);\n                this.updateWidthAccum();\n                this.renderHeaders();\n                rerender = true;\n                redoChanges.push({ changeKind: 'widthOverrideUpdate', col: change.col, value: prev });\n            } else if (changeKind === 'heightOverrideUpdate') {\n                const prev = this.heightOverrides[change.row];\n                this.setHeightOverride(change.row, change.value);\n                this.updateHeightAccum();\n                this.renderRowNumbers();\n                rerender = true;\n                redoChanges.push({ changeKind: 'heightOverrideUpdate', row: change.row, value: prev });\n            } else if (changeKind === 'valchange') {\n                // Record the current value for redo\n                redoChanges.push({ row, col, previousValue: this.getCellText(row, col), newValue: previousValue, changeKind: 'valchange' });\n                // Revert the cell to its previous value\n                this.setCell(row, col, 'text', previousValue);\n                updatedCells.push([row, col]);\n            } else {\n                console.log('UNHANDLED UNDO:', changeKind)\n            }\n        }\n        this.redoStack.push(redoChanges);\n\n        if (rerender) {\n            this.forceRerender();\n        } else {\n            this.rerenderCells(updatedCells);\n        }\n        this.updateSelection();\n    }\n\n    rerenderCells(arr: any = []) {\n        for (let [row, col] of arr) {\n            this.renderCell(row, col);\n        }\n        this.rerenderMerges(arr);\n    }\n    rerenderMerges(arr: any = []) {\n        const mergeSet = new Set();\n        for (let [row, col] of arr) {\n            const merge = this.getMerge(row, col);\n            if (!merge) continue;\n            mergeSet.add(merge);\n            for (let block of this.getBlocksInMerge(merge)) {\n                this.renderCell(merge.startRow, merge.startCol, block);\n            }\n        }\n    }\n\n    // Function to redo the last undone change\n    redo() {\n        if (this.redoStack.length === 0) return; // Nothing to redo\n\n        const changes = this.redoStack.pop(); // Get the last undone change\n        const undoChanges = [];\n        const updatedCells = [];\n        let rerender = false;\n        for (const change of changes) {\n            const { row, col, newValue, previousValue, changeKind } = change;\n            if (changeKind === 'unmerge') {\n                this.mergeSelectedCells(change.bounds, false); rerender = true;\n                undoChanges.push({ changeKind: 'merge', bounds: change.bounds });\n            } else if (changeKind === 'merge') {\n                this.unmergeSelectedCells(change.bounds, false); rerender = true;\n                undoChanges.push({ changeKind: 'unmerge', bounds: change.bounds });\n            } else if (changeKind === 'deleteEntireRow') {\n                this.deleteRow(change.row, false); rerender = true;\n                undoChanges.push({ changeKind: 'deleteEntireRow', row: change.row, rowData: change.rowData, heightOverride: change.heightOverride });\n            } else if (changeKind === 'deleteEntireCol') {\n                this.deleteCol(change.col, false); rerender = true;\n                undoChanges.push({ changeKind: 'deleteEntireCol', col: change.col, colData: change.colData, widthOverride: change.widthOverride });\n            } else if (changeKind === 'insertEntireRow') {\n                this.insertRow(change.row, null, false); rerender = true;\n                undoChanges.push({ changeKind: 'insertEntireRow', row: change.row });\n            } else if (changeKind === 'insertEntireCol') {\n                this.insertCol(change.col, null, false); rerender = true;\n                undoChanges.push({ changeKind: 'insertEntireCol', col: change.col });\n            } else if (changeKind === 'widthOverrideUpdate') {\n                const prev = this.widthOverrides[change.col];\n                this.setWidthOverride(change.col, change.value);\n                this.updateWidthAccum();\n                this.renderHeaders();\n                rerender = true;\n                undoChanges.push({ changeKind: 'widthOverrideUpdate', col: change.col, value: prev });\n            } else if (changeKind === 'heightOverrideUpdate') {\n                const prev = this.heightOverrides[change.row];\n                this.setHeightOverride(change.row, change.value);\n                this.updateHeightAccum();\n                this.renderRowNumbers();\n                rerender = true;\n                undoChanges.push({ changeKind: 'heightOverrideUpdate', row: change.row, value: prev });\n            } else if (changeKind === 'valchange') {\n                // Record the current value for undo\n                undoChanges.push({ row, col, previousValue: this.getCellText(row, col), newValue, changeKind: 'valchange' });\n                // Apply the new value to the cell\n                this.setCell(row, col, 'text', previousValue);\n                updatedCells.push([row, col]);\n            } else {\n                console.log('UNHANDLED REDO:', changeKind)\n            }\n        }\n        this.undoStack.push(undoChanges);\n\n        if (rerender) {\n            this.forceRerender();\n        } else {\n            this.rerenderCells(updatedCells);\n        }\n        this.updateSelection();\n    }\n\n    rowColInBounds(row: number, col: number, bounds: any) {\n        if (bounds == null) return false;\n        return (\n            row <= bounds.endRow &&\n            row >= bounds.startRow &&\n            col <= bounds.endCol &&\n            col >= bounds.startCol\n        );\n    }\n\n    // Function to hide the context menu\n    hideContextMenu() {\n        this.ctxmenu.hide();\n    }\n\n    handleCellDblClick(e: any) {\n        if (e.target === this.editInput) return;\n        const { row, col } = this.getCellFromEvent(e);\n        if (row === -1 || col === -1) return;\n        this.startCellEdit(row, col);\n    }\n\n    openFormatMenu() {\n        const { win, addListener } = launchFormatMenu();\n        addListener((type: string, value: string) => {\n            const selectedCells = this.getSelectedCells();\n            this.setCells(selectedCells, type, value);\n        });\n    }\n\n    forceRerender() {\n        this.updateVisibleGrid(true);\n    }\n\n    handleKeyDown(e: any) {\n        const key = e.key.toLowerCase();\n        if ((key === 'f2') && this.selectionStart) {\n            e.preventDefault();\n            if (this.editingCell) return;\n            this.startCellEdit(this.selectionStart.row, this.selectionStart.col);\n        }\n        else if (key === 'f3') {\n            if (this.editingCell) return;\n            this.openFormatMenu();\n            e.preventDefault();\n        }\n        // Escape key to cancel editing\n        else if (key === 'escape' && this.editInput.style.display !== 'none') {\n            this.cancelCellEdit();\n        }\n        else if (key === 'delete') {\n            if (this.editingCell) return;\n            this.clearSelectedCells();\n        }\n        else if (key === 'x' && e.ctrlKey) {\n            if (this.editingCell) return;\n            document.execCommand('copy');\n            this.clearSelectedCells();\n        }\n        else if (key === 's' && e.ctrlKey) {\n            if (this.editingCell) return;\n            const data = this.data.save();\n            const save = {\n                mergedCells: this.mergedCells,\n                heightOverrides: this.heightOverrides,\n                widthOverrides: this.widthOverrides,\n                gridlinesOn: this.gridlinesOn,\n                data\n            }\n            // localStorage.setItem('data-save', data)\n            localStorage.setItem('sheet-state', JSON.stringify(save))\n            e.preventDefault();\n        }\n        else if (key === 'l' && e.ctrlKey) {\n            if (this.editingCell) return;\n            this.restoreSave();\n            e.preventDefault();\n        }\n        else if (e.ctrlKey || e.metaKey) { // Check for Ctrl (Windows/Linux) or Cmd (Mac)\n            if (this.editingCell) return;\n            if (key === 'y' || (e.shiftKey && key === 'z')) {\n                e.preventDefault(); // Prevent default behavior\n                this.redo();\n            } else if (key === 'z') {\n                e.preventDefault(); // Prevent default behavior (e.g., browser undo)\n                this.undo();\n            }\n        } else if (key === 'arrowup' || key === 'arrowdown' || key === 'arrowleft' || key === 'arrowright' || key === 'enter') {\n            if (!this.selectionEnd || this.editingCell) return;\n            e.preventDefault();\n            this.handleArrowKeyDown(e);\n        } else if (this.selectionStart && e.key?.length === 1) {\n            if (this.editingCell) return;\n            this.startCellEdit(this.selectionStart.row, this.selectionStart.col, e.key);\n        }\n    }\n    restoreSave() {\n        let save: any = localStorage.getItem('sheet-state');\n        if (save) {\n            try {\n                save = JSON.parse(save);\n                if (!save) return false;\n            } catch {\n                return false;\n            }\n            this.widthOverrides = save.widthOverrides;\n            this.heightOverrides = save.heightOverrides;\n            this.mergedCells = save.mergedCells;\n            this.gridlinesOn = save.gridlinesOn;\n            const g = new SparseGrid();\n            g.restore(save.data);\n            this.setData(g);\n            this.updateSelection();\n            return true;\n        }\n        return false;\n    }\n    handleArrowKeyDown(e: any) {\n        if (!this.selectionEnd || !this.selectionStart) return;\n        const deltas: any = {\n            'ArrowUp': [-1, 0], 'ArrowDown': [1, 0], 'ArrowLeft': [0, -1], 'ArrowRight': [0, 1], 'Enter': e.shiftKey ? [-1, 0] : [1,0]\n        }\n        const curMerge = this.getMerge(this.selectionEnd.row, this.selectionEnd.col);\n        let row = this.selectionEnd.row + deltas[e.key][0];\n        let col = this.selectionEnd.col + deltas[e.key][1];\n        const merge = this.getMerge(row, col);\n        if (e.shiftKey) {\n            // TODO: do in less bruteforce way\n            const prevRect = JSON.stringify(this.selectionBoundRect);\n            if (e.key === 'ArrowUp' || (e.key === 'Enter' && e.shiftKey)) {\n                let curRect;\n                while (row > 0) {\n                    curRect = this.getBoundingRectCells(this.selectionStart.row, this.selectionStart.col, row, col);\n                    if (prevRect !== JSON.stringify(curRect)) break;\n                    row--;\n                }\n            }\n            else if (e.key === 'ArrowDown' || (e.key === 'Enter' && !e.shiftKey)) {\n                let curRect;\n                while (row < this.getTotalRows()) {\n                    curRect = this.getBoundingRectCells(this.selectionStart.row, this.selectionStart.col, row, col);\n                    if (prevRect !== JSON.stringify(curRect)) break;\n                    row++;\n                }\n            }\n            else if (e.key === 'ArrowLeft') {\n                let curRect;\n                while (col > 0) {\n                    curRect = this.getBoundingRectCells(this.selectionStart.row, this.selectionStart.col, row, col);\n                    if (prevRect !== JSON.stringify(curRect)) break;\n                    col--;\n                }\n            }\n            else if (e.key === 'ArrowRight') {\n                let curRect;\n                while (col < this.getTotalCols()) {\n                    curRect = this.getBoundingRectCells(this.selectionStart.row, this.selectionStart.col, row, col);\n                    if (prevRect !== JSON.stringify(curRect)) break;\n                    col++;\n                }\n            }\n        } else if (merge && merge === curMerge) {\n            if (e.key === 'ArrowUp') { row = merge.startRow - 1; }\n            else if (e.key === 'ArrowDown' || e.key === 'Enter') { row = merge.endRow + 1; }\n            else if (e.key === 'ArrowLeft') { col = merge.startCol - 1; }\n            else if (e.key === 'ArrowRight') { col = merge.endCol + 1; }\n        }\n        row = Math.max(0, row); row = Math.min(row, this.totalRowBounds-1);\n        col = Math.max(0, col); col = Math.min(col, this.totalColBounds-1);\n        if (e.shiftKey && e.key !== 'Enter') this.selectionEnd = { row, col };\n        this.selectCell({ row, col, continuation: e.shiftKey && e.key !== 'Enter' });\n    }\n    inVisibleBounds(row: number, col: number) {\n        const { row: visStartRow, col: visStartCol } = this.getTopLeftBounds();\n        const { row: visEndRow, col: visEndCol } = this.getBottomRightBounds();\n        return row >= visStartCol && row <= visEndRow &&\n            col >= visStartCol && col <= visEndCol;\n    }\n    scrollTo(row: number, col: number, delta: string) {\n        if (row < 0 || row >= this.totalRows || col < 0 || col >= this.totalCols) return;\n        const merge = this.getMerge(row, col);\n        let left, top, width, height, value;\n        if (merge) {\n            left = this.getWidthOffset(merge.startCol, true);\n            top = this.getHeightOffset(merge.startRow, true);\n            width = this.getMergeWidth(merge);\n            height = this.getMergeHeight(merge);\n            value = this.getCellText(merge.startRow, merge.startCol);\n        } else {\n            left = this.getWidthOffset(col, true);\n            top = this.getHeightOffset(row, true);\n            width = this.getCellWidth(row, col);\n            height = this.rowHeight(row);\n            value = this.getCellText(row, col);\n        }\n        if (delta === 'ArrowUp') {\n            this.container.scrollTo({\n                top: top - 100,\n                behavior: 'smooth'\n            });\n\n        } else if (delta === 'ArrowDown') {\n            this.container.scrollTo({\n                // top: top + 100,\n                top,\n                behavior: 'smooth'\n            });\n        } else if (delta == 'ArrowLeft') {\n            this.container.scrollTo({\n                // left: left - 100,\n                left,\n                behavior: 'smooth'\n            });\n        } else if (delta === 'ArrowRight') {\n            this.container.scrollTo({\n                // left: left + width,\n                left: left - this.container.clientWidth - width,\n                behavior: 'smooth'\n            });\n        }\n    }\n    getSelectedCells() {\n        if (!this.selectionBoundRect) return [];\n        const { startRow, startCol, endRow, endCol } = this.selectionBoundRect;\n        const cells = this.data.getCellsForce(startRow, startCol, endRow, endCol).filter((cell: {row:number,col:number}) => this.isValid(cell.row, cell.col));\n        return cells;\n    }\n    isValid(row:number,col:number) {\n        const merge = this.getMerge(row,col);\n        if (!merge) return true;\n        return merge.startRow == row && merge.startCol == col;\n    }\n    getTotalRows() {\n        return this.totalRows;\n    }\n    getTotalCols() {\n        return this.totalCols;\n    }\n    get totalRows() {\n        return Math.max(this.data?.rowCount || 0, this.blockRows) + (this.blockRows * this.padding);\n    }\n    get totalCols() {\n        return Math.max(this.data?.colCount || 0, this.blockCols) + (this.blockCols * this.padding);\n    }\n    getMerge(row: number, col: number) {\n        // Check if the cell is part of a merged range\n        return this.mergedCells.find((merged: any) =>\n            row >= merged.startRow &&\n            row <= merged.endRow &&\n            col >= merged.startCol &&\n            col <= merged.endCol\n        );\n    }\n\n    getMergeWidth(merge: any) {\n        return this.getWidthBetweenColumns(merge.startCol, merge.endCol+1);\n    }\n    getMergeHeight(merge: any) {\n        return this.getHeightBetweenRows(merge.startRow, merge.endRow+1);\n    }\n    startCellEdit(row: number, col: number, startingValue?: string) {\n        if (row < 0 || row > this.totalRowBounds || col < 0 || col > this.totalColBounds) return;\n        const merge = this.getMerge(row, col);\n        let left, top, width, height, value;\n        if (merge) {\n            left = this.getWidthOffset(merge.startCol, true);\n            top = this.getHeightOffset(merge.startRow, true);\n            width = this.getMergeWidth(merge);\n            height = this.getMergeHeight(merge);\n            value = startingValue != null ? '' : this.getCellText(merge.startRow, merge.startCol);\n            row = merge.startRow, col = merge.startCol;\n        } else {\n            left = this.getWidthOffset(col, true);\n            top = this.getHeightOffset(row, true);\n            width = this.getCellWidth(row, col);\n            height = this.rowHeight(row);\n            value = startingValue != null ? '' : this.getCellText(row, col);\n        }\n\n        // Set up edit input\n        this.editInput.value = value;\n        this.editInput.style.left = `${left}px`;\n        this.editInput.style.top = `${top}px`;\n        this.editInput.style.minWidth = `${width}px`;\n        this.editInput.style.width = (value.length + 1) + \"ch\";\n        this.editInput.style.height = `${height}px`;\n        this.editInput.style.display = 'block';\n        this.editInput.focus();\n\n        // Store edit state\n        this.editingCell = { row, col };\n        this.editInput.onblur = this.finishCellEdit.bind(this);\n        this.editInput.onkeydown = (e) => {\n            if (e.key === 'Enter') {\n                this.finishCellEdit();\n            } else {\n                this.editInput.style.width = (this.editInput.value.length + 1) + \"ch\";\n            }\n        };\n    }\n\n    setText(row: number, col: number, text: string) {\n        this.setCell(row,col,'text',text)\n        // this.data?.setCellProperty(row, col, 'text', text);\n    }\n    setCell(row: number, col: number, field: string, value: any) {\n        const cell = this.getCell(row, col);\n        if (!cell) return;\n        cell[field] = value;\n        if (!this.data.has(row, col)) {\n            this.data.set(row, col, cell);\n        }\n    }\n    setCells(cells: any, field: string, value: any) {\n        for (let cell of cells) {\n            this.setCell(cell.row, cell.col, field, value);\n            this.renderCell(cell.row, cell.col);\n        }\n        if (field === 'cellType') {\n            console.log('forcing rerender')\n            this.forceRerender();\n        }\n    }\n    // mergeInCell(row: number, col: number, data: any) {\n    //     const cell = this.getCell(row, col);\n    //     if (!cell) return;\n    //     Object.assign(cell, data);\n    // }\n    finishCellEdit() {\n        if (!this.editingCell) return;\n\n        const { row, col } = this.editingCell;\n        if (this.editInput.value === this.getCellText(row, col)) {\n            this.cancelCellEdit();\n            return;\n        }\n        this.recordChanges([{ row, col, previousValue: this.getCellText(row, col), newValue: this.editInput.value, changeKind: 'valchange' }]);\n        this.setText(row, col, this.editInput.value);\n        // Hide input and redraw cell\n        this.cancelCellEdit();\n        const merge = this.getMerge(row,col);\n        if (merge) {\n            for (let block of this.getBlocksInMerge(merge)) {\n                this.renderCell(merge.startRow,merge.startCol,block);\n            }\n        } else {\n            this.renderCell(row, col);\n        }\n    }\n\n    getBlocksInMerge(merge: any): Set<any> {\n        const blockSet = new Set();\n        for (let i = merge.startRow; i <= merge.endRow; i++) {\n            for (let j = merge.startCol; j <= merge.endCol; j++) {\n                const block = this.getBlockOrSubBlock(i, j);\n                if (!block) continue;\n                if (blockSet.has(block)) continue;\n                blockSet.add(block);\n            }\n        }\n        return blockSet;\n    }\n\n    cancelCellEdit() {\n        this.editInput.style.display = 'none';\n        this.editingCell = null;\n        this.editInput.onblur = null;\n        this.editInput.onkeydown = null;\n    }\n\n    updateRenderingQuality() {\n        if (\n            this.lastBlockCanvases !== this.blockCanvases()\n        ) {\n            console.log(\"RESIZE\");\n            this.lastBlockCanvases = this.blockCanvases();\n            this.forceRerender();\n        } else if (Math.abs(window.devicePixelRatio - this.lastDevicePixelRatio) > 0.00) {\n            // Only update if scale changed significantly\n            this.lastDevicePixelRatio = window.devicePixelRatio;\n            console.log('update render quality')\n            requestAnimationFrame(() => {\n                if (this.busy) return;\n                const createTimeout = () =>\n                    setTimeout(() => {\n                        this.busy = true;\n                        this.activeBlocks.forEach(block => {\n                            if (block.subBlocks.length < 2) {\n                                this.renderBlock(block, true);\n                            } else {\n                                block.subBlocks.forEach((subBlock: any) => {\n                                    this.renderBlock(subBlock, true);\n                                })\n                            }\n                        });\n                        this.busy = false;\n                        this.rqtimeout = null;\n                    }, 200);\n                if (this.rqtimeout) clearTimeout(this.rqtimeout);\n                this.rqtimeout = createTimeout();\n            })\n        }\n    }\n\n    createSelectionHandle() {\n        this.selectionHandle = document.createElement('div');\n        this.selectionHandle.className = 'selection-handle bottom-right';\n        this.selectionHandle.style.display = 'none';\n        this.selectionLayer.appendChild(this.selectionHandle);\n\n        // Add drag event for the handle\n        this.selectionHandle.addEventListener('mousedown', (e) => {\n            e.stopPropagation();\n            if (!this.selectedCell) return;\n            this.isResizing = true;\n            this.resizeStart = { x: e.clientX, y: e.clientY };\n            this.resizeInitialSize = {\n                width: this.selectedCell.offsetWidth,\n                height: this.selectedCell.offsetHeight\n            };\n        });\n    }\n\n    handleMouseDown(e: any) { // handle dragging select cell logic\n        if (e.target.closest('.header-cell') ||\n            e.target.closest('.row-number-container') ||\n            e.target.closest('.corner-cell')) {\n                this.hideContextMenu();\n                return;\n            }\n        if (e.target === this.container) return;\n        if (e.target === this.editInput) return;\n        if (this.draggingHeader) return;\n        if (e.target !== this.ctxmenu.container && !this.ctxmenu.container.contains(e.target)) {\n            this.hideContextMenu();\n        }\n        if (e.button === 2) {\n            const x = e.clientX;\n            const y = e.clientY;\n            const { row, col } = this.getCellFromEvent(e);\n            this.showContextMenu(x, y, row, col);\n            return;\n        }\n        if (e.button !== 0) return;\n        this.handleSelectionMouseDown(e);\n    }\n\n    handleSelectionMouseDown(e: any) {\n        const { row, col }: {row: number, col: number} = this.getCellFromEvent(e);\n        if (e.ctrlKey && this.selectionStart) { // start new selection keep old one\n            this.selectionStart = null;\n            this.selectionEnd = null;\n            this.selectionBoundRect = null;\n            this.isSelecting = true;\n            this.addNewSelection();\n            this.selectCell({ row, col });\n        } else if (e.shiftKey && this.selectionStart) { // continue old selection\n            this.isSelecting = true;\n            this.selectCell({ row, col, continuation: true }); // kill old selections start new\n        } else {\n            this.isSelecting = true;\n            this.selectCell({ row, col, clear: true });\n        }\n    }\n\n    selectCell({ row, col, continuation = false, clear = false }: any) {\n        if (row === -1 || col === -1) return;\n        if (clear) {\n            this.selectionLayer.innerHTML = '';\n            this.addNewSelection();\n        }\n        if (!this.activeSelection) this.addNewSelection();\n        if (!continuation) this.selectionStart = { row, col };\n        this.selectionEnd = { row, col };\n        if (!this.selectionStart) return;\n        this.selectionBoundRect = this.getBoundingRectCells(this.selectionStart.row, this.selectionStart.col, row, col);\n        this.updateSelection();\n\n        // this.forceRerender(); // debug purposes, remove\n    }\n\n    getCellsInRange(startRow: number, startCol: number, endRow: number, endCol: number) {\n        const cells: any = [];\n        for (let i = startRow; i <= endRow; i++) {\n            for (let j = startCol; j <= endCol; j++) {\n                cells.push(this.getCell(i, j));\n            }\n        }\n        return cells;\n    }\n\n    getMergesInRange({ startRow, startCol, endRow, endCol }: Rect): Rect[] {\n        const merges: Set<Rect> = new Set();\n        for (let i = startRow; i <= endRow; i++) {\n            for (let j = startCol; j <= endCol; j++) {\n                const merge = this.getMerge(i, j);\n                if (merge) {\n                    merges.add(merge);\n                }\n            }\n        }\n        return [...merges.values()];\n    }\n\n    normalizeCoordinates({ startRow, startCol, endRow, endCol }: { startRow: number, startCol: number, endRow: number, endCol: number }) {\n        const _startRow = Math.min(startRow, endRow)\n        const _endRow = Math.max(startRow, endRow);\n        const _startCol = Math.min(startCol, endCol);\n        const _endCol = Math.max(startCol, endCol);\n        return { startRow: _startRow, startCol: _startCol, endRow: _endRow, endCol: _endCol };\n    }\n\n    getBoundingRectCells(startRow: number, startCol: number, endRow: number, endCol: number) {\n        ({ startRow, startCol, endRow, endCol } = this.normalizeCoordinates({ startRow, startCol, endRow, endCol }))\n        const merges: any = this.getMergesInRange({ startRow, startCol, endRow, endCol });\n        if (merges.length === 0) return { startRow, startCol, endRow, endCol };\n        for (const merge of merges) {\n            startRow = Math.min(startRow, merge.startRow);\n            startCol = Math.min(startCol, merge.startCol);\n            endRow = Math.max(endRow, merge.endRow);\n            endCol = Math.max(endCol, merge.endCol);\n        }\n        return { startRow, startCol, endRow, endCol };\n    }\n\n    handleMouseMove(e: any) {\n        if (this.draggingHeader) {\n            const scrollLeft = this.container.scrollLeft;\n            this.draggingHeader.el.style.left = `${scrollLeft + e.clientX - 8}px`;\n        } else if (this.draggingRow) {\n            const scrollTop = this.container.scrollTop;\n            const rect = this.container.getBoundingClientRect();\n            this.draggingRow.el.style.top = `${scrollTop + e.clientY - this.headerRowHeight - rect.y - 5}px`;\n        } else if (this.isSelecting) {\n            const { row, col } = this.getCellFromEvent(e);\n            if (row !== -1 && col !== -1) {\n                this.selectionEnd = { row, col };\n                if (!this.selectionStart) return;\n                this.selectionBoundRect = this.getBoundingRectCells(this.selectionStart.row, this.selectionStart.col, row, col);\n                this.updateSelection();\n            }\n        } else if (this.isResizing) {\n            const dx = e.clientX - this.resizeStart.x;\n            const dy = e.clientY - this.resizeStart.y;\n\n            const newWidth = Math.max(this.cellWidth, this.resizeInitialSize.width + dx);\n            const newHeight = Math.max(this.cellHeight, this.resizeInitialSize.height + dy);\n\n            if (!this.selectedCell) return;\n            this.selectedCell.style.width = `${newWidth}px`;\n            this.selectedCell.style.height = `${newHeight}px`;\n\n            // Position the handle\n            this.positionSelectionHandle();\n        }\n    }\n\n    handleMouseUp(e: any) {\n        if (this.isSelecting) {\n            this.isSelecting = false;\n            const { row, col } = this.getCellFromEvent(e);\n            if (row !== -1 && col !== -1) {\n                if (!this.selectionStart) return;\n                this.selectionEnd = { row, col };\n                const rect = this.getBoundingRectCells(this.selectionStart.row, this.selectionStart.col, row, col);\n                this.updateSelection();\n            }\n        } else if (this.isResizing) {\n            this.isResizing = false;\n        } else if (this.draggingHeader) {\n            const draggingHeader = this.draggingHeader;\n            const col = this.draggingHeader.col;\n            this.draggingHeader = null;\n            const scrollLeft = this.container.scrollLeft;\n            const diff = (scrollLeft + e.clientX) - this.getWidthOffset(col + 1, true);\n\n            \n            const prevOverride = this.widthOverrides[col];\n            const change = this.widthOverrides[col] ? this.widthOverrides[col] + diff : this.getCellWidth(col) + diff;\n            if (change <= 1) {\n                draggingHeader.el.style.left = draggingHeader.origLeft;\n                return;\n            }\n            this.setWidthOverride(col, change);\n            this.recordChanges([{ changeKind: 'widthOverrideUpdate', col, value: prevOverride }]);\n            this.updateWidthAccum();\n            this.renderHeaders();\n            this.forceRerender();\n            this.updateSelection();\n            e.stopPropagation();\n        } else if (this.draggingRow) {\n            const draggingRow = this.draggingRow;\n            const row = this.draggingRow.row;\n            this.draggingRow = null;\n            const scrollTop = this.container.scrollTop;\n            const rect = this.container.getBoundingClientRect();\n            const diff = (scrollTop + e.clientY - rect.y) - this.getHeightOffset(row + 1, true);\n            const prevOverride = this.heightOverrides[row];\n            const change = this.heightOverrides[row] ? this.heightOverrides[row] + diff : this.getCellHeight(row) + diff;\n            if (change <= 1) {\n                draggingRow.el.style.top = draggingRow.origTop;\n                return;\n            }\n            this.setHeightOverride(row, change);\n            this.recordChanges([{ changeKind: 'heightOverrideUpdate', row, value: prevOverride }]);\n            this.updateHeightAccum();\n            this.renderRowNumbers();\n            this.forceRerender();\n            this.updateSelection();\n            e.stopPropagation();\n        }\n    }\n\n    getColWidth(col: any) {\n        return this.widthOverrides[col] ?? this.cellWidth;\n    }\n\n    getTopLeftBounds() {\n        const rect = this.container.getBoundingClientRect();\n        const scrollLeft = this.container.scrollLeft;\n        const scrollTop = this.container.scrollTop;\n        // Adjust for header and row numbers\n        const x = Math.max(0, (this.rowNumberWidth + 8) - scrollLeft) - rect.left + scrollLeft - this.rowNumberWidth; // 50 for row numbers\n        const y = (this.headerRowHeight + 8) - rect.top + scrollTop - this.headerRowHeight;\n\n        if (x < 0 || y < 0) return { row: -1, col: -1 };\n\n        // Find column\n        let col = this.bsearch(this.widthAccum, x + this.rowNumberWidth) - 1;\n\n\n        // Find row\n        const row = this.bsearch(this.heightAccum, y + this.headerRowHeight) - 1;\n\n        return {\n            row: Math.min(row, this.totalRowBounds - 1),\n            col: Math.min(col, this.totalColBounds - 1)\n        };\n    }\n\n    getBottomRightBounds() {\n        const rect = this.container.getBoundingClientRect();\n        const scrollLeft = this.container.scrollLeft;\n        const scrollTop = this.container.scrollTop;\n        // Adjust for header and row numbers\n        const x = rect.right - rect.left + scrollLeft - (this.rowNumberWidth + 8);\n        const y = rect.bottom - rect.top + scrollTop - this.headerRowHeight;\n\n        if (x < 0 || y < 0) return { row: -1, col: -1 };\n\n        // Find column\n        let col = this.bsearch(this.widthAccum, x + this.rowNumberWidth) - 1;\n\n        // Find row\n        const row = this.bsearch(this.heightAccum, y + this.headerRowHeight) - 1;\n\n        return {\n            row: Math.min(row, this.totalRowBounds - 1),\n            col: Math.min(col, this.totalColBounds - 1)\n        };\n    }\n\n    bsearch(arr: any, target: number) {\n        function condition(i: number) {\n            return target < arr[i];\n        }\n        let left = 0;\n        let right = arr.length - 1;\n\n        while (left < right) {\n            let mid = Math.floor(left + (right - left) / 2);\n            if (condition(mid)) {\n                right = mid\n            } else {\n                left = mid + 1;\n            }\n        }\n        return left\n    }\n\n    getCellFromEvent(e: any) {\n        const rect = this.container.getBoundingClientRect();\n        const scrollLeft = this.container.scrollLeft;\n        const scrollTop = this.container.scrollTop;\n        // Adjust for header and row numbers\n        const x = e.clientX - rect.left + scrollLeft - this.rowNumberWidth;\n        const y = e.clientY - rect.top + scrollTop - this.headerRowHeight; // 30 for header\n\n        if (x < 0 || y < 0) return { row: -1, col: -1 };\n\n        let col = this.bsearch(this.widthAccum, x + this.rowNumberWidth) - 1;\n        let row = this.bsearch(this.heightAccum, y + this.headerRowHeight) - 1;\n        return {\n            row: Math.min(row, this.totalRowBounds - 1),\n            col: Math.min(col, this.totalColBounds - 1)\n        };\n    }\n\n    mergeSelectedCells(bounds: any = null, recordChanges = true) {\n        if (!this.selectionStart || !this.selectionEnd) return;\n        let sr = this.selectionStart.row, sc = this.selectionStart.col,\n            er = this.selectionEnd.row, ec = this.selectionEnd.col;\n        if (bounds) {\n            sr = bounds.startRow, sc = bounds.startCol,\n                er = bounds.endRow, ec = bounds.endCol\n        }\n\n        // Normalize selection coordinates\n        const startRow = Math.min(sr, er);\n        const endRow = Math.max(sr, er);\n        const startCol = Math.min(sc, ec);\n        const endCol = Math.max(sc, ec);\n\n        // Check if the selected range overlaps with existing merged cells\n        for (const merged of this.mergedCells) {\n            if (\n                startRow <= merged.endRow &&\n                endRow >= merged.startRow &&\n                startCol <= merged.endCol &&\n                endCol >= merged.startCol\n            ) {\n                alert('Cannot merge cells that overlap with existing merged cells.');\n                return;\n            }\n        }\n\n        // Add the merged range to the list\n        this.mergedCells.push({ startRow, endRow, startCol, endCol });\n        recordChanges && this.recordChanges([{ changeKind: 'merge', bounds: { startRow, endRow, startCol, endCol } }]);\n\n        recordChanges && this.forceRerender();\n    }\n\n    unmergeSelectedCells(bounds: any = null, recordChanges = true) {\n        if (!this.selectionStart || !this.selectionEnd) return;\n        let sr = this.selectionStart.row, sc = this.selectionStart.col,\n            er = this.selectionEnd.row, ec = this.selectionEnd.col;\n        if (bounds) {\n            sr = bounds.startRow, sc = bounds.startCol,\n                er = bounds.endRow, ec = bounds.endCol\n        }\n\n        // Normalize selection coordinates\n        const startRow = Math.min(sr, er);\n        const endRow = Math.max(sr, er);\n        const startCol = Math.min(sc, ec);\n        const endCol = Math.max(sc, ec);\n        let merged;\n        for (let i = 0; i < this.mergedCells.length; i++) {\n            merged = this.mergedCells[i];\n            if (\n                startRow <= merged.endRow &&\n                endRow >= merged.startRow &&\n                startCol <= merged.endCol &&\n                endCol >= merged.startCol\n            ) {\n                this.mergedCells.splice(i, 1);\n            }\n        }\n        if (!merged) return;\n        recordChanges && this.recordChanges([{\n            changeKind: 'unmerge', bounds: { startRow: merged.startRow, endRow: merged.endRow, startCol: merged.startCol, endCol: merged.endCol }\n        }])\n        recordChanges && this.forceRerender();\n    }\n\n    addNewSelection() {\n        const newSelection = document.createElement('div');\n        this.selectionLayer.appendChild(newSelection);\n        this.activeSelection = newSelection;\n        return newSelection;\n    }\n\n    updateSelection() {\n        if (!this.activeSelection) return;\n        // Clear previous selection\n        this.activeSelection.innerHTML = '';\n        if (!this.selectionHandle) return;\n        this.selectionHandle.style.display = 'none';\n\n        if (!this.selectionBoundRect) return;\n\n        const { startRow, startCol, endRow, endCol } = this.selectionBoundRect;\n\n        let left = this.getWidthOffset(startCol);\n        let width = this.getWidthBetweenColumns(startCol, endCol+1);\n\n        const top = this.getHeightOffset(startRow); // Below header\n        const height = this.getHeightBetweenRows(startRow, endRow+1);\n\n        // Create selection element\n        this.selectedCell = document.createElement('div');\n        this.selectedCell.className = 'selected-cell';\n        this.selectedCell.style.left = `${left}px`;\n        this.selectedCell.style.top = `${top}px`;\n        this.selectedCell.style.width = `${width+1}px`;\n        this.selectedCell.style.height = `${height+1}px`;\n\n        this.activeSelection.appendChild(this.selectedCell);\n\n        // Add resize handle\n        this.positionSelectionHandle();\n        this.selectionHandle.style.display = 'block';\n\n        for(let col of this.selectedCols) {\n            if (col < startCol || col > endCol) {\n                this.selectedCols.delete(col);\n                const el: HTMLDivElement | null = this.headerContainer.querySelector(`[data-hccol='${col}']`);\n                if (!el) continue;\n                el.classList.remove('col-selected');\n                const handle: any = el.nextSibling;\n                if (handle) handle.classList.remove('handle-col-selected');\n            }\n        }\n        for(let i = startCol; i <= endCol; i++) {\n            if (i in this.selectedCols) {\n                continue;\n            }\n            this.selectedCols.add(i);\n            const el: HTMLDivElement | null = this.headerContainer.querySelector(`[data-hccol='${i}']`);\n            if (!el) continue;\n            el.classList.add('col-selected');\n            const handle: any = el.nextSibling;\n            if (handle) handle.classList.add('handle-col-selected');\n        }\n        for (let row of this.selectedRows) {\n            if (row < startRow || row > endRow) {\n                this.selectedRows.delete(row);\n                const el: HTMLDivElement | null = this.rowNumberContainer.querySelector(`[data-rnrow='${row}']`);\n                if (!el) continue;\n                el.classList.remove('row-selected');\n                const handle: any = el.nextSibling;\n                if (handle) handle.classList.remove('handle-row-selected');\n            }\n        }\n        for (let i = startRow; i <= endRow; i++) {\n            if (i in this.selectedRows) {\n                continue;\n            }\n            this.selectedRows.add(i);\n            const el: HTMLDivElement | null = this.rowNumberContainer.querySelector(`[data-rnrow='${i}']`);\n            if (!el) continue;\n            el.classList.add('row-selected');\n            const handle: any = el.nextSibling;\n            if (handle) handle.classList.add('handle-row-selected');\n        }\n    }\n\n    positionSelectionHandle() {\n        if (!this.selectedCell || !this.selectionHandle) return;\n\n        const rect = this.selectedCell.getBoundingClientRect();\n        const containerRect = this.container.getBoundingClientRect();\n\n        this.selectionHandle.style.left = `${rect.right - containerRect.left - 3}px`;\n        this.selectionHandle.style.top = `${rect.bottom - containerRect.top - 3}px`;\n    }\n\n    setData(data: any = null, initialData: any = null) {\n        data = data || new SparseGrid();\n        if (initialData) {\n            initialData.forEach(((cell: any) => {\n                data.set(cell.row, cell.col, cell);\n            }))\n        }\n        // for (let i = 0; i < 2000; i++) {\n        //     for (let j = 0; j < 2000; j++) {\n        //         data.set(i, j, { text: (Math.random() * 1000).toFixed(2), _id: uuid() })\n        //     }\n        // }\n        this.parser = new ExpressionParser(data);\n        this.data = data;\n\n        this.updateGridDimensions();\n        this.renderHeaders();\n        this.renderRowNumbers();\n        this.updateVisibleGrid(true);\n    }\n\n    renderHeaders() {\n        this.headerContainer.innerHTML = `<div class=\"header-cell\" style=\"width:${this.rowNumberWidth}px;\"></div>`;\n        this.headerContainer.onmousedown = (e: any) => {\n            if (e.button !== 0) return;\n            if (e.target.getAttribute('data-col') != null) {\n                this.draggingHeader = { origLeft: e.target.style.left, el: e.target, col: parseInt(e.target.getAttribute('data-col')) };\n            }\n        }\n\n        // Calculate total width needed for columns\n        let totalWidth = this.rowNumberWidth;\n        for (let col: any = 0; col <= this.totalColBounds; col++) {\n            const width = this.getColWidth(col);\n            totalWidth += width;\n\n            const headerCell = document.createElement('div');\n            headerCell.className = 'header-cell';\n            headerCell.setAttribute('data-hccol', col);\n            headerCell.textContent = this.getColumnName(col);\n            headerCell.style.width = `${width}px`;\n\n            const headerHandle = document.createElement('div');\n            headerHandle.className = 'header-handle';\n            headerHandle.style.height = `${this.headerRowHeight}px`;\n            headerHandle.setAttribute('data-col', col);\n            headerHandle.style.left = `${totalWidth - 8}px`;\n\n            this.headerContainer.appendChild(headerCell);\n            this.headerContainer.appendChild(headerHandle);\n        };\n\n        this.headerContainer.style.width = `${totalWidth + 10}px`;\n    }\n\n    createRowNumber(label: string) {\n        const el = document.createElement('div');\n        el.className = 'row-number';\n        // el.textContent = label;\n        el.innerHTML = `<div>${label}</div>`\n        return el;\n    }\n\n    renderRowNumbers() {\n        this.rowNumberContainer.innerHTML = '';\n        this.rowNumberContainer.onmousedown = (e: any) => {\n            if (e.button !== 0) return;\n            if (e.target.getAttribute('data-row') != null) {\n                this.draggingRow = { origTop: e.target.style.top, el: e.target, row: parseInt(e.target.getAttribute('data-row')) };\n            }\n        }\n\n        // Create or reuse row numbers for visible rows\n        // let totalHeight = 0;\n        let totalHeight = 0;\n        for (let row: any = 0; row <= this.totalRowBounds; row++) {\n            // if (row >= this.totalRows) break;\n\n            const rowNumberEl: any = this.createRowNumber(row + 1);\n            // rowNumberEl.textContent = row + 1;\n            totalHeight += this.rowHeight(row);\n            rowNumberEl.style.height = `${this.rowHeight(row)}px`;\n            rowNumberEl.style.lineHeight = `${this.rowHeight(row)}px`;\n            rowNumberEl.setAttribute('data-rnrow', row);\n            this.rowNumberContainer.appendChild(rowNumberEl);\n\n            const rowNumberHandle = document.createElement('div');\n            rowNumberHandle.className = 'row-handle';\n            rowNumberHandle.setAttribute('data-row', row);\n            rowNumberHandle.style.top = `${totalHeight - 5}px`;\n            this.rowNumberContainer.appendChild(rowNumberHandle);\n        }\n        // this.totalHeight = totalHeight;\n        this.rowNumberContainer.style.height = `${totalHeight + 20}px`; // extra pixels fixes slight alignment issue on scroll\n    }\n\n    get totalRowBounds() {\n        return this.heightAccum?.length || this.blockRows;\n    }\n    get totalColBounds() {\n        return this.widthAccum?.length || this.blockCols;\n    }\n    get totalYBounds() {\n        return this.heightAccum[this.heightAccum.length - 1];\n    }\n    get totalXBounds() {\n        return this.widthAccum[this.widthAccum.length - 1];\n    }\n\n    updateHeightAccum() {\n        let prevRowBounds = this.totalRowBounds;\n        const oldHeight = this.heightAccum.length;\n        this.heightAccum = [this.headerRowHeight];\n        let heightSum = this.headerRowHeight;\n        const updateVisHeight = (this.container.clientHeight + this.container.scrollTop) >= (this.container.scrollHeight - 150);\n        for (let row = 0; row < oldHeight - 1 || row % this.blockRows !== 0 || row < this.totalRows || (updateVisHeight && row < (prevRowBounds + this.blockRows)); row++) {\n            this.heightAccum.push(heightSum += this.heightOverrides[row] ?? this.cellHeight);\n        }\n    }\n\n    updateWidthAccum() {\n        let prevColBounds = this.totalColBounds;\n        const oldWidth = this.widthAccum.length;\n        this.widthAccum = [this.rowNumberWidth];\n        let widthSum = this.rowNumberWidth;\n        const updateVisWidth = (this.container.clientWidth + this.container.scrollLeft) >= (this.container.scrollWidth - 150);\n        for (let col = 0; col < oldWidth - 1 || col % this.blockCols !== 0 || col < this.totalCols || (updateVisWidth && col < (prevColBounds + this.blockCols)); col++) {\n            this.widthAccum.push(widthSum += this.getColWidth(col));\n        }\n    }\n\n    updateGridDimensions() {\n        this.updateHeightAccum();\n        this.updateWidthAccum();\n    }\n\n    handleScroll() {\n        const updateVisHeight = (this.container.clientHeight + this.container.scrollTop) >= (this.container.scrollHeight - 150);\n        const updateVisWidth = (this.container.clientWidth + this.container.scrollLeft) >= (this.container.scrollWidth - 150);\n        if (updateVisHeight || updateVisWidth) {\n            console.log('SCROLL UPDATE VIS HEIGHT OR WIDTH')\n            this.updateGridDimensions();\n            this.renderRowNumbers();\n            this.renderHeaders();\n            this.forceRerender();\n        } else {\n            this.updateVisibleGrid();\n        }\n        this.updateSelection();\n    }\n\n    calculateVisibleRange() {\n        const { row: visStartRow, col: visStartCol } = this.getTopLeftBounds();\n        const { row: visEndRow, col: visEndCol } = this.getBottomRightBounds();\n        this.visibleStartRow = visStartRow;\n        this.visibleStartCol = visStartCol;\n        this.visibleEndRow = visEndRow;\n        this.visibleEndCol = visEndCol;\n    }\n\n    updateVisibleGrid(force = false) {\n\n        const padding = this.padding;\n        const maxBlockRows = Math.floor(this.totalRowBounds / this.blockRows);\n        const maxBlockCols = Math.floor(this.totalColBounds / this.blockCols);\n\n        this.calculateVisibleRange();\n\n        // Determine which blocks we need to render\n        const neededBlocks = new Set();\n        const startBlockRow = Math.max(0, Math.floor(this.visibleStartRow / this.blockRows) - padding);\n        const endBlockRow = Math.min(maxBlockRows, Math.floor((this.visibleEndRow - 1) / this.blockRows));\n        const startBlockCol = Math.max(0, Math.floor(this.visibleStartCol / this.blockCols) - padding);\n        const endBlockCol = Math.min(maxBlockCols, Math.floor((this.visibleEndCol - 1) / this.blockCols));\n\n        // console.log('visible blocks', [startBlockRow, startBlockCol], 'through', [endBlockRow, endBlockCol])\n\n        for (let blockRow = startBlockRow; blockRow <= endBlockRow; blockRow++) {\n            for (let blockCol = startBlockCol; blockCol <= endBlockCol; blockCol++) {\n                neededBlocks.add(`${blockRow},${blockCol}`);\n            }\n        }\n\n        // Remove blocks that are no longer needed\n        const toRemove: any = [];\n        this.activeBlocks.forEach((block, key) => {\n            if (force || !neededBlocks.has(key)) {\n                toRemove.push(key);\n                this.releaseBlock(block);\n            }\n        });\n\n        toRemove.forEach((key: any) => this.activeBlocks.delete(key));\n        // this.updatePlaceholders();\n\n        // TODO: when zoom is >= 170%, subdivide blocks\n        requestAnimationFrame(() => {\n            // Add new blocks that are needed\n            neededBlocks.forEach((key: any) => {\n                if (!this.activeBlocks.has(key)) {\n                    const [blockRow, blockCol] = key.split(',').map(Number);\n                    const block = this.createBlock(blockRow, blockCol);\n                } else {\n                    // Ensure existing blocks are properly positioned\n                    const block = this.activeBlocks.get(key);\n                    this.positionBlock(block);\n                }\n            });\n        })\n    }\n\n    blockCanvases() {\n        if (devicePixelRatio >= 1.875) {\n            return 4;\n        } if (devicePixelRatio > 1.7) {\n            return 2;\n        } else {\n            return 1;\n        }\n    }\n\n    positionBlock(block: any) {\n        // Calculate horizontal position (left)\n        let left = this.rowNumberWidth; // Account for row numbers column\n        for (let col = 0; col < block.startCol; col++) {\n            left += this.getColWidth(col);\n        }\n\n        // Calculate vertical position (top)\n\n        const top = this.heightAccum[block.startRow];\n\n        block.blockContainer.style.left = `${left}px`;\n        block.blockContainer.style.top = `${top}px`;\n        block.blockContainer.style.display = 'block';\n\n        // block.left = left;\n    }\n\n    positionSubBlock(block: any, i: number) {\n        if (i === 0) return;\n\n        // Calculate vertical position (top)\n        if (i === 1 || i === 3) {\n            block.canvas.style.left = `${block.parentBlock.subBlocks[0].styleWidth}px`;\n        }\n        if (i >= 2) {\n            block.canvas.style.top = `${block.parentBlock.subBlocks[0].styleHeight}px`;\n        }\n    }\n\n    createBlock(blockRow: number, blockCol: number) {\n        // Calculate block boundaries\n        const startRow = blockRow * this.blockRows;\n        const endRow = Math.min(startRow + this.blockRows);\n        const startCol = blockCol * this.blockCols;\n        const endCol = Math.min(startCol + this.blockCols);\n\n        const blockContainer = document.createElement('div');\n        blockContainer.id = `${blockRow},${blockCol}`;\n        blockContainer.className = 'canvas-block-container';\n\n        const createCanvas = (idx: number | null = null) => {\n            // const canvas = this.pool.pop() || document.createElement('canvas');\n            const canvas = document.createElement('canvas');\n            canvas.className = 'canvas-block';\n            canvas.id = `canvas-${blockRow},${blockCol}${idx != null ? '__' + idx : ''}`;\n            return canvas;\n        }\n\n        const block: any = {\n            startRow,\n            endRow,\n            startCol,\n            endCol,\n            blockRow,\n            blockCol,\n            blockContainer,\n            canvas: null,\n            subBlocks: []\n        };\n        const key = `${blockRow},${blockCol}`;\n        this.activeBlocks.set(key, block);\n\n        // const subBlockTemplate = () => {\n        //     return { startRow, startCol, endRow, endCol, canvas: createCanvas(), parentBlock: block, isSubBlock: true, index: 0 };\n        // }\n\n        this.calculateBlockDimensionsContainer(block);\n        this.positionBlock(block);\n\n        // Add to DOM if not already present\n        if (!blockContainer.parentNode) {\n            this.container.appendChild(blockContainer);\n        }\n        if (this.blockCanvases() === 1) {\n            block.canvas = createCanvas();\n            blockContainer.appendChild(block.canvas)\n            this.calculateBlockDimensions(block);\n            this.renderBlock(block);\n        } else {\n            if (this.blockCanvases() === 2) {\n                block.subBlocks.push(\n                    { startRow, startCol, endRow, endCol: Math.floor((startCol + endCol) / 2), canvas: createCanvas(0), parentBlock: block, isSubBlock: true, index: 0 }, // left half\n                    { startRow, startCol: Math.floor((startCol + endCol) / 2), endRow, endCol, canvas: createCanvas(1), parentBlock: block, isSubBlock: true, index: 1 }, // right half\n                )\n            } else { // 4\n                block.subBlocks.push(\n                    { startRow, startCol, endRow: Math.floor((startRow + endRow) / 2), endCol: Math.floor((startCol + endCol) / 2), canvas: createCanvas(0), parentBlock: block, isSubBlock: true, index: 0 }, // top left\n                    { startRow, startCol: Math.floor((startCol + endCol) / 2), endRow: Math.floor((startRow + endRow) / 2), endCol, canvas: createCanvas(1), parentBlock: block, isSubBlock: true, index: 1 }, // top right\n                    { startRow: Math.floor((startRow + endRow) / 2), startCol, endRow, endCol: Math.floor((startCol + endCol) / 2), canvas: createCanvas(2), parentBlock: block, isSubBlock: true, index: 2 }, // bottom left\n                    { startRow: Math.floor((startRow + endRow) / 2), startCol: Math.floor((startCol + endCol) / 2), endRow, endCol, canvas: createCanvas(3), parentBlock: block, isSubBlock: true, index: 3 }, // bottom right\n                )\n            }\n            for (let i = 0; i < this.blockCanvases(); i++) {\n                blockContainer.appendChild(block.subBlocks[i].canvas);\n                this.calculateBlockDimensions(block.subBlocks[i]);\n                this.positionSubBlock(block.subBlocks[i], i);\n                this.renderBlock(block.subBlocks[i]);\n            }\n        }\n\n        return block;\n    }\n\n    calculateBlockDimensions(block: any) {\n        let scaleFactor = this.effectiveDevicePixelRatio();\n        block.width = 0;\n        let styleWidth = 0;\n        for (let col = block.startCol; col < block.endCol; col++) {\n            block.width += this.getColWidth(col) * scaleFactor;\n        }\n        block.width = Math.round(block.width);\n        styleWidth = block.width / scaleFactor;\n\n        // Calculate block height based on rows\n        block.height = (this.heightAccum[block.endRow] - this.heightAccum[block.startRow]) * scaleFactor;\n        block.height = Math.round(block.height)\n        let styleHeight = block.height / scaleFactor;\n\n        // Set canvas dimensions\n        block.canvas.width = block.width;\n        block.canvas.height = block.height;\n        block.canvas.style.width = `${styleWidth}px`;\n        block.canvas.style.height = `${styleHeight}px`;\n\n        const ctx = block.canvas.getContext('2d', { alpha: false });\n        block.styleHeight = styleHeight;\n        block.styleWidth = styleWidth;\n        ctx.scale(1,1);\n    }\n\n    calculateBlockDimensionsContainer(block: any) {\n        const scaleFactor = this.effectiveDevicePixelRatio();\n        // Calculate block width based on columns\n        block.width = 0;\n        for (let col = block.startCol; col < block.endCol; col++) {\n            block.width += this.getColWidth(col) * scaleFactor;\n        }\n        block.width = Math.round(block.width);\n        block.width = block.width / scaleFactor;\n\n        // Calculate block height based on rows\n        block.height = (this.heightAccum[block.endRow] - this.heightAccum[block.startRow]) * scaleFactor;\n        block.height = Math.round(block.height)\n        block.height = block.height / scaleFactor;\n        // block.height = (block.endRow - block.startRow) * this.cellHeight;\n        block.blockContainer.style.width = `${block.width}px`;\n        block.blockContainer.style.height = `${block.height}px`;\n        block.styleWidth = block.width;\n        block.styleHeight = block.height;\n    }\n\n    effectiveDevicePixelRatio() {\n        return devicePixelRatio;\n        // return devicePixelRatio * devicePixelRatio;\n        if (this.blockCanvases() > 2) {\n            return Math.min(window.devicePixelRatio || 1, 4);\n            // return Math.min(window.devicePixelRatio || 1, 3.6);\n        }\n        if (this.blockCanvases() == 2) {\n            return Math.min(window.devicePixelRatio || 1, 3);\n        }\n        return Math.min(window.devicePixelRatio || 1, 1.4);\n    }\n\n    blockKey(block: any) {\n        return `${block.blockRow},${block.blockCol}`;\n    }\n\n    rowHeight(row: any) {\n        return this.heightOverrides[row] ?? this.cellHeight;\n    }\n\n    leftBlock(block: any) {\n        if (block.isSubBlock) {\n            if (block.index === 0) {\n                const leftBlock = this.getBlock(block.parentBlock.blockRow, block.parentBlock.blockCol - 1);\n                if (!leftBlock) return;\n                return leftBlock.subBlocks?.[1];\n            } else if (block.index === 1) {\n                return block.parentBlock.subBlocks?.[0];\n            } else if (block.index === 2) {\n                const leftBlock = this.getBlock(block.parentBlock.blockRow, block.parentBlock.blockCol - 1);\n                if (!leftBlock) return;\n                return leftBlock.subBlocks?.[leftBlock.subBlocks?.length - 1];\n            } else if (block.index === 3) {\n                return block.parentBlock.subBlocks?.[2];\n            }\n            return null;\n        } else {\n            return this.getBlock(block.blockRow, block.blockCol - 1)\n        }\n    }\n\n    blockFromRc(row: number, col: number) {\n        const blockRow = Math.floor(row / 34);\n        const blockCol = Math.floor(col / 34);\n        const block = this.getBlock(blockRow, blockCol);\n        if (!block) return null; // todo: left block might be pruned because not in view\n        if (block.subBlocks.length === 0) return block;\n        for (let subBlock of block.subBlocks) {\n            if (row >= subBlock.startRow && row <= subBlock.endRow && col >= subBlock.startCol && col <= subBlock.endCol) {\n                return subBlock;\n            }\n        }\n        return null;\n    }\n\n    getKey(row: number, col: number) {\n        return `${row},${col}`;\n    }\n\n    getWidthHeight(row: number, col: number) {\n        const merged = this.getMerge(row, col);\n        let width, height;\n        if (merged) {\n            width = this.getWidthBetweenColumns(merged.startCol, merged.endCol+1), height = this.getHeightBetweenRows(merged.startRow, merged.endRow+1)\n        } else {\n            width = this.getCellWidth(row, col), height = this.getHeight(row, col);\n        }\n        return { width, height }\n    }\n\n    // getBlock(blockRow: number, blockCol: number) {\n    //     return this.activeBlocks.get(this.blockKey({ blockRow, blockCol }));\n    // }\n\n    getBlock(row: number, col: number) {\n        const blockRow = Math.floor(row / this.blockRows);\n        const blockCol = Math.floor(col / this.blockCols);\n        const key = this.getKey(blockRow, blockCol);\n        if (this.activeBlocks.has(key)) {\n            return this.activeBlocks.get(key);\n        }\n        return null;\n    }\n\n    getBlockOrSubBlock(row: number, col: number) {\n        const parentBlock = this.getBlock(row, col);\n        if (!parentBlock) return null;\n        if (parentBlock.subBlocks.length === 0) {\n            return parentBlock;\n        }\n        if (parentBlock.subBlocks.length === 2) {\n            let ncol = col % this.blockCols;\n            const subBlockCols = Math.floor(this.blockCols / 2);\n            let idx = ncol >= subBlockCols ? 1 : 0;\n            return parentBlock.subBlocks[idx];\n        }\n        if (parentBlock.subBlocks.length === 4) {\n            let ncol = col % this.blockCols;\n            const subBlockCols = Math.floor(this.blockCols / 2);\n            let right = ncol >= subBlockCols;\n\n            let nrow = row % this.blockRows;\n            const subBlockRows = Math.floor(this.blockRows / 2);\n            let bottom = nrow >= subBlockRows;\n\n            let i = 0;\n            if (!right && !bottom) i = 0;\n            else if (right && !bottom) i = 1;\n            else if (!right && bottom) i = 2;\n            else if (right && bottom) i = 3;\n\n            return parentBlock.subBlocks[i];\n        }\n        return null;\n    }\n\n    getCellCoordsContainer(row: number, col: number): CellCoordsRect {\n        const merge = this.getMerge(row, col);\n        let left, top, width, height, value;\n        if (merge) {\n            left = this.getWidthOffset(merge.startCol, true);\n            top = this.getHeightOffset(merge.startRow, true);\n            width = this.getMergeWidth(merge);\n            height = this.getMergeHeight(merge);\n            row = merge.startRow, col = merge.startCol;\n        } else {\n            left = this.getWidthOffset(col, true);\n            top = this.getHeightOffset(row, true);\n            width = this.getCellWidth(row, col);\n            height = this.rowHeight(row);\n        }\n        return { left, top, width, height, row, col };\n    }\n    getCellCoordsCanvas(row: number, col: number): CellCoordsRect {\n        const block = this.getBlockOrSubBlock(row, col);\n        // if (!block) return null;\n        const merge = this.getMerge(row, col);\n        let left, top, width, height;\n        if (merge) {\n            left = this.getWidthBetweenColumns(block.startCol, merge.startCol);\n            top = this.getHeightBetweenRows(block.startRow, merge.startRow);\n            width = this.getMergeWidth(merge);\n            height = this.getMergeHeight(merge);\n            row = merge.startRow, col = merge.startCol;\n        } else {\n            left = this.getWidthBetweenColumns(block.startCol, col);\n            top = this.getHeightBetweenRows(block.startRow, row);\n            width = this.getCellWidth(row, col);\n            height = this.rowHeight(row);\n        }\n        return { left, top, width, height, row, col };\n    }\n    renderBorders(ctx: any, row: any, col: any) {\n        if (!this.getCell(row,col)?.border) return;\n        const border = this.getCell(row, col)?.border;\n        ctx.save();\n        ctx.strokeStyle = 'red';\n\n        // left border\n        if (hasBorderStr(border, 'left')) {\n            ctx.beginPath();\n            ctx.moveTo(this.getWidthOffset(col) * devicePixelRatio, this.getHeightOffset(row) * devicePixelRatio);\n            ctx.lineTo(this.getWidthOffset(col) * devicePixelRatio, (this.getHeightOffset(row) + this.getCellHeight(row)) * devicePixelRatio);\n            ctx.stroke();\n        }\n\n        // top border\n        if (hasBorderStr(border, 'top')) {\n            ctx.beginPath();\n            ctx.moveTo(this.getWidthOffset(col) * devicePixelRatio, this.getHeightOffset(row) * devicePixelRatio);\n            ctx.lineTo((this.getWidthOffset(col) + this.getCellWidth(col)) * devicePixelRatio, this.getHeightOffset(row) * devicePixelRatio);\n            ctx.stroke();\n        }\n\n        // right border\n        if (hasBorderStr(border, 'right')) {\n            ctx.beginPath();\n            ctx.moveTo((this.getWidthOffset(col) + this.getCellWidth(col)) * devicePixelRatio, this.getHeightOffset(row) * devicePixelRatio);\n            ctx.lineTo((this.getWidthOffset(col) + this.getCellWidth(col)) * devicePixelRatio, (this.getHeightOffset(row) + this.getCellHeight(row)) * devicePixelRatio);\n            ctx.stroke();\n        }\n\n        // bottom border\n        if (hasBorderStr(border, 'bottom')) {\n            ctx.beginPath();\n            ctx.moveTo(this.getWidthOffset(col) * devicePixelRatio, (this.getHeightOffset(row) + this.getCellHeight(row)) * devicePixelRatio);\n            ctx.lineTo((this.getWidthOffset(col) + this.getCellWidth(col)) * devicePixelRatio, (this.getHeightOffset(row) + this.getCellHeight(row)) * devicePixelRatio);\n            ctx.stroke();\n        }\n\n        ctx.restore();\n    }\n\n    renderCell(row: any, col: any, srcblock?: any, ctx?: any) {\n        // if (this.getMerge(row, col)) {\n        //     // this.forceRerender();\n        //     return;\n        // }\n        if (!ctx) {\n            let block = srcblock;\n            if (!block) block = this.getBlockOrSubBlock(row,col);\n            if (block) {\n                ctx = block?.canvas.getContext('2d', { alpha: false });\n            }\n        }\n        let left, top, width, height;\n        try {\n            ({ left, top, width, height } = this.getCellCoordsCanvas(row, col));\n        } catch {\n            return;\n        }\n        if (ctx) ctx.fillStyle = '#ffffff';\n        if (!srcblock || this.rowColInBounds(row,col,srcblock)) {\n            // console.log('inbounds::', row,col)\n            ctx && ctx.fillRect((left + 1)*devicePixelRatio, (top + 1)*devicePixelRatio, (width - 2)*devicePixelRatio, (height - 2)*devicePixelRatio);\n        } else {\n            const ssr = srcblock.startRow, sec = srcblock.endCol;\n            const merge = this.getMerge(row,col);\n            if (!merge) return;\n            row = merge.startRow, col = merge.startCol;\n            const _width = this.getWidthBetweenColumns(srcblock.startCol,merge.endCol+1);\n            const _height = this.getHeightBetweenRows(srcblock.startRow,merge.endRow+1);\n            left = _width - width;\n            top = _height - height;\n            ctx && ctx.fillRect((left + 1)*devicePixelRatio, (top + 1)*devicePixelRatio, (width - 2)*devicePixelRatio, (height - 2)*devicePixelRatio);\n        }\n        if (ctx) ctx.fillStyle = '#333333';\n        this.renderBorders(ctx,row,col);\n        if (this.getCell(row, col).cellType === 'button') {\n            const button = this.getButton(row, col).el;\n            ({ left, top, width, height } = this.getCellCoordsContainer(row, col));\n            this.positionElement(button, left, top, width, height);\n        } else if (this.getCell(row, col).cellType === 'linechart') {\n            const lineChart = this.getLineChart(row, col)?.el;\n            ({ left, top, width, height } = this.getCellCoordsContainer(row, col));\n            this.positionElement(lineChart, left, top, width, height);\n        } else {\n            this.clearElRegistry(row,col);\n            this.renderCellText(ctx, left, top, width, row, col);\n            if (dependencyTree[row]?.[col]) {\n                for (let childRow in dependencyTree[row][col]) {\n                    for (let childCol in dependencyTree[row][col][childRow]) {\n                        this.renderCell(childRow, childCol)\n                    }\n                }\n            }\n        }\n    }\n\n    scalerZoom() {\n        return devicePixelRatio;\n    }\n\n    renderBlock(block: any, calcDimensions = false) {\n        if (calcDimensions) {\n            this.calculateBlockDimensions(block);\n        }\n        const ctx = block.canvas.getContext('2d', { alpha: false });\n        ctx.fillStyle = '#ffffff';\n        ctx.fillRect(0, 0, block.canvas.width, block.canvas.height);\n\n        // Set rendering quality based on zoom\n        this.applyRenderingQuality(ctx);\n\n        // Draw cells\n        let x = 0;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.fillStyle = '#333333';\n        const scaler = 88;\n        ctx.strokeStyle = `hsl(0,0%,${scaler}%)`;\n        ctx.lineWidth = 1;\n        ctx.font = this.getFontString();\n\n        ctx.translate(0.5, 0.5); // thick gridlines fix\n\n        // draw row gridlines\n        let y;\n        if (this.gridlinesOn && this.quality() !== 'performance') {\n            for (let row = block.startRow; row < block.endRow; row++) {\n                y = Math.round((this.heightAccum[row] - this.heightAccum[block.startRow])*devicePixelRatio);\n                ctx.beginPath();\n                ctx.moveTo(0, y);\n                ctx.lineTo(block.canvas.width, y);\n                ctx.stroke();\n            }\n        }\n        // draw col grid lines\n        if (this.gridlinesOn && this.quality() !== 'performance') {\n            for (let col = block.startCol; col < block.endCol; col++) {\n                const colWidth = this.getColWidth(col);\n                // draw col gridlines\n                ctx.beginPath();\n                ctx.moveTo(Math.round(x * devicePixelRatio), 0);\n                ctx.lineTo(Math.round(x * devicePixelRatio), block.canvas.height);\n                ctx.stroke();\n                x += colWidth;\n            }\n        }\n        x = 0;\n        const seenMerges = new Set();\n        for (let col = block.startCol; col < block.endCol; col++) {\n            const colWidth = this.getColWidth(col);\n\n            for (let row = block.startRow; row < block.endRow; row++) {\n                if (!this.getCell(row, col)) continue;\n                // Check if the cell is part of a merged range\n                const merged = this.getMerge(row, col);\n                if (merged) continue;\n                const y = this.heightAccum[row] - this.heightAccum[block.startRow];\n\n                // Skip rendering if the cell is part of a merged range (except the top-left cell)\n\n                const renderWidth = colWidth;\n\n                if (this.getCell(row, col).cellType === 'button') {\n                    if (!merged) {\n                        const button = this.getButton(row, col).el;\n                        this.positionElement(button, this.widthAccum[col], this.heightAccum[row], renderWidth, this.rowHeight(row));\n                    }\n                } else if (this.getCell(row, col).cellType === 'linechart') {\n                    const lineChart = this.getLineChart(row, col)?.el;\n                    this.positionElement(lineChart, this.widthAccum[col], this.heightAccum[row], renderWidth, this.rowHeight(row));\n                } else {\n                    this.renderBorders(ctx,row,col);\n                    this.renderCellText(ctx, x, y, renderWidth, row, col);\n                }\n            }\n\n            x += colWidth;\n        }\n\n        this.renderMergesOnBlock(block, ctx);\n    }\n    renderMergesOnBlock(block: any, ctx: any) {\n        const merges: Array<Rect> = this.getMergesInRange(block);\n        for(let merge of merges) {\n            const row = merge.startRow, col = merge.startCol;\n            this.renderCell(row,col,block,ctx);\n        }\n    }\n    clearElRegistry(row: number, col: number) {\n        const _id = this.getCellId(row, col);\n        if (this.elRegistry[_id]) {\n            this.elRegistry[_id].el.parentNode?.removeChild(this.elRegistry[_id].el);\n        }\n    }\n    isSelectStart(row: number, col: number) {\n        if (!this.selectionStart) return;\n        return this.selectionStart.row === row && this.selectionStart.col === col;\n    }\n    isSelectEnd(row: number, col: number) {\n        if (!this.selectionEnd) return;\n        return this.selectionEnd.row === row && this.selectionEnd.col === col;\n    }\n    positionElement(el: any, x: number, y: number, width: number, height: number, append = true) {\n        el.style.top = `${y}px`;\n        el.style.left = `${x}px`;\n        el.style.width = `${width}px`;\n        el.style.height = `${height}px`;\n        append && this.container.appendChild(el);\n    }\n    getCellId(row: number, col: number) {\n        return this.getCell(row, col)?._id;\n    }\n    getButton(row: number, col: number) {\n        const _id = this.getCellId(row, col);\n        if (this.elRegistry[_id] && this.elRegistry[_id].type === 'button') {\n            return this.elRegistry[_id];\n        } else if (this.elRegistry[_id] && this.elRegistry.type !== 'button') {\n            this.elRegistry[_id].el.parentNode?.removeChild(this.elRegistry[_id].el);\n        }\n        const button: any = document.createElement('button');\n        button.textContent = this.getCellText(row, col);\n        button.onclick = (e: any) => e.stopPropagation();\n        button.ondblclick = (e: any) => e.stopPropagation();\n        button.style.zIndex = 1;\n        button.style.position = 'absolute';\n        button.style.overflow = 'hidden';\n        button.style.userSelect = 'none';\n        this.elRegistry[_id] = { type: 'button', el: button };\n        return this.elRegistry[_id];\n    }\n    getLineChart(row: number, col: number) {\n        const _id = this.getCellId(row, col);\n        if (this.elRegistry[_id] && this.elRegistry[_id].type === 'lineChart') {\n            const data = this.elRegistry[_id].data;\n            const { width, height } = this.getWidthHeight(row, col);\n            this.elRegistry[_id].lineChart.render(data, width, height);\n            return this.elRegistry[_id];\n        } else if (this.elRegistry[_id] && this.elRegistry[_id].type !== 'lineChart') {\n            this.elRegistry[_id].el.parentNode?.removeChild(this.elRegistry[_id].el);\n        }\n        const data = [\n            [\"10\", \"2023-01-01\"],\n            [\"15\", \"2023-01-02\"],\n            [\"12\", \"2023-01-03\"],\n            [\"20\", \"2023-01-04\"],\n            [\"18\", \"2023-01-05\"],\n            [\"25\", \"2023-01-06\"],\n            [\"22\", \"2023-01-07\"]\n        ];\n        const wrapper: any = document.createElement('div');\n        // wrapper.appendChild(lineChart.container);\n        wrapper.onclick = (e: any) => e.stopPropagation();\n        wrapper.ondblclick = (e: any) => e.stopPropagation();\n        wrapper.style.zIndex = 1;\n        wrapper.style.position = 'absolute';\n        wrapper.style.overflow = 'hidden';\n        wrapper.style.height = '100%';\n        wrapper.style.width = '100%';\n        const { width, height } = this.getWidthHeight(row, col);\n        const lineChart = createLineChart(data, wrapper, width, height);\n        this.elRegistry[_id] = { el: wrapper, lineChart, data, type: 'lineChart' };\n        return this.elRegistry[_id];\n    }\n    getWidthOffset(col: number, withStickyLeftBar = false) {\n        return this.widthAccum[col] - (withStickyLeftBar ? 0 : this.rowNumberWidth);\n    }\n    getHeightOffset(row: number, withStickyHeader = false) {\n        return this.heightAccum[row] - (withStickyHeader ? 0 : this.headerRowHeight);\n    }\n    getCellWidth(a: any, b: any = null) {\n        let col = a;\n        if (typeof b === 'number') {\n            col = b;\n        }\n        return this.getColWidth(col);\n    }\n    getCellHeight(row: number, col = null) {\n        return this.rowHeight(row);\n    }\n    getHeight(row: number, col: number | null = null) {\n        return this.rowHeight(row);\n    }\n    getWidthBetweenColumns(col1: number, col2: number) {\n        let accumulatedWidth = 0;\n        for (let _col = col1; _col < col2; _col++) {\n            const colWidth = this.getColWidth(_col);\n            accumulatedWidth += colWidth;\n        }\n        return accumulatedWidth;\n    }\n    getHeightBetweenRows(startRow: number, endRow: number) {\n        if (endRow < startRow) { let tmp = endRow; endRow = startRow; startRow = tmp; }\n        return this.heightAccum[endRow] - this.heightAccum[startRow];\n    }\n    quality() {\n        const devicePixelRatio = window.devicePixelRatio;\n        if (devicePixelRatio < 0.5) {\n            return 'performance';\n        } else if (devicePixelRatio < 1) {\n            return 'balance';\n        } else {\n            return 'max';\n        }\n    }\n    applyRenderingQuality(ctx: any) {\n        switch (this.quality()) {\n            case 'performance':\n                ctx.textRendering = 'optimizeSpeed';\n                ctx.imageSmoothingEnabled = false;\n                break;\n            case 'balance':\n                ctx.textRendering = 'geometricPrecision';\n                ctx.imageSmoothingEnabled = true;\n                break;\n            case 'max':\n            default:\n                ctx.textRendering = 'geometricPrecision';\n                ctx.imageSmoothingEnabled = true;\n        }\n    }\n\n    getCell(row: number, col: number) {\n        if (!this.data) return { row, col };\n        return this.data.get(row, col)\n    }\n    getCellText(row: number, col: number) {\n        return this.getCell(row, col)?.text || '';\n    }\n    getCellTextAlign(row: number, col: number) {\n        return this.getCell(row, col)?.textAlign;\n    }\n\n    renderCellText(ctx: any, x: number, y: number, width: number, row: number, col: number, _text = '') {\n        const value = this.getCellText(row, col);\n        let text = value !== undefined && value !== null ? String(value) : '';\n        if (_text !== '') text = _text;\n        // if (text === '') return;\n        try {\n            removeDependents(row,col);\n            text = this.parser.evaluateExpression(text, [row,col]);\n        } catch (e) {\n            console.warn(e);\n            text = text;\n        }\n        if (text === '') return;\n        ctx.save(); // Save the current state\n        if (this.getCellColor(row, col)) {\n            ctx.fillStyle = this.getCellColor(row, col);\n        }\n        if (this.getCell(row, col)?.fontSize != null) {\n            ctx.font = this.getFontString(row, col);\n        }\n        if (this.getCell(row, col)?.textBaseline != null) {\n            ctx.textBaseline = this.getCell(row, col).textBaseline;\n        }\n        ctx.beginPath();\n        if (this.getCellTextAlign(row, col)) ctx.textAlign = this.getCellTextAlign(row, col);\n        ctx.rect(x * devicePixelRatio, y * devicePixelRatio, width * devicePixelRatio, this.rowHeight(row) * devicePixelRatio); // Adjust y position based on your text baseline\n        ctx.clip();\n        ctx.fillText(text, (x + 4) * devicePixelRatio, (y + this.rowHeight(row) / 2) * devicePixelRatio);\n        ctx.restore(); // Restore the state to remove clipping\n    }\n\n    getCellColor(row: number, col: number) {\n        return this.getCell(row, col)?.color ?? '';\n    }\n\n    getAbbreviatedText(text: string) {\n        if (text.length > 8) {\n            return text.substring(0, 5) + '...';\n        }\n        return text;\n    }\n\n    getFontString(row: number | null = null, col: number | null = null) {\n        let fontSize = 12*devicePixelRatio;\n        if (row != null && col != null && this.getCell(row, col).fontSize != null) {\n            fontSize = this.getCell(row, col).fontSize;\n        }\n        let fontString = `${fontSize}px Arial`;\n\n        if (this.quality() === 'max' && devicePixelRatio >= 1) {\n            // Only use subpixel rendering when not zoomed out\n            fontString += ', sans-serif';\n        }\n\n        return fontString;\n    }\n\n    releaseBlock(block: any) {\n        if (block.subBlocks.length > 1) {\n            while (block.subBlocks.length > 1) {\n                block.subBlocks.pop();\n            }\n        }\n        block.blockContainer.innerHTML = '';\n        block.blockContainer.parentNode.removeChild(block.blockContainer);\n    }\n}","function createUuid() {\n    let _id = 1;\n    return function () {\n        return _id++;\n    }\n}\nconst uuid = createUuid();\nexport default class SparseGrid {\n    constructor() {\n        this._data = [];           // {row: {col: value}}\n        this._colCounts = [];      // {col: count}\n        this._topRow = Infinity;\n        this._bottomRow = -Infinity;\n        this._leftCol = Infinity;\n        this._rightCol = -Infinity;\n        this._totalValues = 0;\n        this._totalRows = 0;       // Track distinct rows with data\n        this._totalCols = 0;       // Track distinct columns with data\n        this._valueCount = 0;\n    }\n\n    save() {\n        const state = {\n            // Store data as arrays for compactness\n            d: Object.keys(this._data).map(row => [\n                Number(row),\n                Object.keys(this._data[row]).map(col => [\n                    col === 'count' ? col : Number(col),\n                    this._data[row][col]\n                ])\n            ]),\n            // Store counts as arrays for compactness\n            cc: Object.entries(this._colCounts).map(([col, count]) => [Number(col), count]),\n            // Store boundaries\n            tr: this._topRow,\n            br: this._bottomRow,\n            lc: this._leftCol,\n            rc: this._rightCol,\n            // Store totals\n            tv: this._totalValues,\n            trow: this._totalRows,\n            tcol: this._totalCols\n        };\n        return JSON.stringify(state);\n    }\n\n    restore(json) {\n        const state = JSON.parse(json);\n\n        // Clear current state\n        this.clear();\n\n        // Rebuild data structure\n        state.d.forEach(([row, cols]) => {\n            this._data[row] = [];\n            cols.forEach(([col, value]) => {\n                this._data[row][col] = value;\n            });\n        });\n\n        state.cc.forEach(([col, count]) => {\n            this._colCounts[col] = count;\n        });\n\n        // Restore boundaries and totals\n        this._topRow = state.tr;\n        this._bottomRow = state.br;\n        this._leftCol = state.lc;\n        this._rightCol = state.rc;\n        this._totalValues = state.tv;\n        this._totalRows = state.trow;\n        this._totalCols = state.tcol;\n\n        return this;\n    }\n\n    // Set a value at a specific row and column\n    setCellProperty(row, col, property, value) {\n        const cell = this.get(row, col);\n        if (!cell._id) cell._id = uuid();\n        cell[property] = value;\n        this.set(row, col, cell);\n    }\n\n    setRowSize(row, size) {\n        if (!this._data[row]) return;\n        this._data[row].size = size;\n    }\n    incrementRowSize(row) {\n        if (!this._data[row]) return;\n        this._data[row].size++;\n    }\n    decrementRowSize(row) {\n        if (!this._data[row]) return;\n        this._data[row].size--;\n    }\n    set(row, col, value) {\n        if (!Number.isInteger(row) || !Number.isInteger(col)) {\n            throw new Error('Coordinates must be integers');\n        }\n\n        const isNewRow = !this._data[row];\n        const isNewCell = isNewRow || !Object.hasOwn(this._data[row], col);\n        const isNewCol = isNewCell && !this._colCounts[col];\n\n        if (isNewRow) {\n            this._data[row] = [];\n            this.setRowSize(row, 0);\n            this._totalRows++;\n\n            // Update row boundaries\n            if (row < this._topRow) this._topRow = row;\n            if (row > this._bottomRow) this._bottomRow = row;\n        }\n\n        if (isNewCell) {\n            this.incrementRowSize(row);\n            this._totalValues++;\n\n            if (isNewCol) {\n                this._colCounts[col] = 0;\n                this._totalCols++;\n            }\n            this._colCounts[col]++;\n\n            // Update column boundaries\n            if (col < this._leftCol) this._leftCol = col;\n            if (col > this._rightCol) this._rightCol = col;\n        }\n\n        this._data[row][col] = value;\n        if (!value._id) value._id = uuid();\n        return isNewCell;\n    }\n\n    decrementColSize(col) {\n        this._colCounts[col]--;\n        if (this._colCounts[col] <= 0) delete this._colCounts[col];\n    }\n    incrementColSize(col) {\n        if (!this._colCounts[col]) this._colCounts[col] = 0;\n        this._colCounts[col]++;\n    }\n\n    deleteRow(row) {\n        const rowObj = this._data[row];\n        if (rowObj) {\n            for (let col in rowObj) {\n                this.decrementColSize(col);\n            }\n            this._totalRows--;\n        };\n        this._data.splice(row, 1);\n        this._recalculateBoundaries();\n        return rowObj;\n    }\n\n    addRow(row, data = []) {\n        data = data || [];\n        for (let col in data) {\n            this.incrementColSize(col);\n        }\n        if (data.length > 0) this._totalRows++;\n        this._data.splice(row, 0, data);\n        this._recalculateBoundaries();\n        return null;\n    }\n\n    addCol(col, data = []) {\n        data = data || [];\n        for (let row in this._data) {\n            if (row === 'count') continue;\n            this._data[row].splice(col, 0, undefined);\n            delete this._data[row][col];\n            if (row in data) {\n                this._data[row][col] = data[row];\n                this.incrementRowSize(row);\n            }\n        }\n        if (data.length > 0) this._totalCols++;\n        this._recalculateBoundaries();\n        return null;\n    }\n\n    getCol(col) {\n        const colData = [];\n        for (let row in this._data) {\n            if (row === 'count') continue;\n            if (col in this._data[row]) {\n                colData[row] = this._data[row][col];\n            }\n        }\n        return colData;\n    }\n\n    deleteCol(col) {\n        const colData = this.getCol(col);\n        const colCount = this._colCounts[col];\n        colData.size = colCount;\n        if (this._colCounts[col]) {\n            this._totalCols--;\n        }\n        for (let row in this._data) {\n            if (row === 'count') continue;\n            if (this.has(row, col)) {\n                this.decrementColSize(col);\n            }\n            this._data[row].splice(col, 1);\n        }\n        this._colCounts.splice(col, 1); // shift colcounts\n        this._recalculateBoundaries();\n        return colData;\n    }\n\n    delete(row, col) {\n        if (!this.has(row, col)) {\n            return false;\n        }\n\n        delete this._data[row][col];\n        this.decrementRowSize(row);\n        this._colCounts[col]--;\n        this._totalValues--;\n\n        // Check if row became empty\n        if (this._data[row].size === 0) {\n            delete this._data[row];\n            this._totalRows--;\n        }\n\n        // Check if column became empty\n        if (this._colCounts[col] === 0) {\n            delete this._colCounts[col];\n            this._totalCols--;\n        }\n\n        let boundariesChanged = false;\n        if (row === this._topRow || row === this._bottomRow) {\n            boundariesChanged = true;\n        }\n        if (col === this._leftCol || col === this._rightCol) {\n            boundariesChanged = true;\n        }\n\n        if (boundariesChanged) {\n            this._recalculateBoundaries();\n        }\n\n        return true;\n    }\n\n    _recalculateBoundaries() {\n        if (this.totalRows === 0) {\n            this._topRow = Infinity;\n            this._bottomRow = -Infinity;\n            this._leftCol = Infinity;\n            this._rightCol = -Infinity;\n            return;\n        }\n\n        let minRow = Infinity;\n        let maxRow = -Infinity;\n        let minCol = Infinity;\n        let maxCol = -Infinity;\n\n        for (let row in this._data) {\n            row = parseInt(row);\n            if (row < minRow) minRow = row;\n            if (row > maxRow) maxRow = row;\n            for (let col in this._data[row]) {\n                col = parseInt(col);\n                if (col < minCol) minCol = col;\n                if (col > maxCol) maxCol = col;\n            }\n        }\n\n        this._topRow = minRow;\n        this._bottomRow = maxRow;\n        this._leftCol = minCol;\n        this._rightCol = maxCol;\n    }\n\n    get(row, col) {\n        if (!this._data[row] || !Object.hasOwn(this._data[row], col)) {\n            return { row, col };\n        }\n        return this._data[row][col];\n    }\n\n    has(row, col = null) {\n        if (col == null) return Object.hasOwn(this._data, row);\n        return Object.hasOwn(this._data, row) && Object.hasOwn(this._data[row], col);\n    }\n\n    deleteCells(coordinates) {\n        let deletedCount = 0;\n        let boundaryChanged = false;\n        const affectedRows = {};\n\n        // First pass: perform deletions\n        for (const [row, col] of coordinates) {\n            if (!Number.isInteger(row) || !Number.isInteger(col)) continue;\n\n            if (this.has(row, col)) {\n                delete this._data[row][col];\n                this.decrementRowSize(row);\n                this._colCounts[col]--;\n                deletedCount++;\n                affectedRows[row] = true;\n\n                if (col === this._leftCol || col === this._rightCol) {\n                    boundaryChanged = true;\n                }\n            }\n        }\n\n        // Second pass: clean empty rows\n        for (const row in affectedRows) {\n            if (this._data[row].size === 0) {\n                delete this._data[row];\n                const numRow = Number(row);\n                if (numRow === this._topRow || numRow === this._bottomRow) {\n                    boundaryChanged = true;\n                }\n            }\n        }\n\n        this._totalValues -= deletedCount;\n        if (boundaryChanged) {\n            this._recalculateBoundaries();\n        }\n\n        return deletedCount;\n    }\n\n    // Get count of cells in a specific row\n    getRowCount(row) {\n        return this._data[row].size || 0;\n    }\n\n    // Get all non-empty rows with their counts\n    getRowCounts() {\n        return Object.fromEntries(\n            Object.entries(this._data).map(([row, data]) => [Number(row), data.size])\n        );\n    }\n\n    deleteCellsArea(startRow, startCol, endRow, endCol) {\n        const [minRow, maxRow] = [Math.min(startRow, endRow), Math.max(startRow, endRow)];\n        const [minCol, maxCol] = [Math.min(startCol, endCol), Math.max(startCol, endCol)];\n        let deletedCount = 0;\n        let boundariesChanged = false;\n\n        // We need to collect rows first to avoid modifying while iterating\n        const rowsToProcess = [];\n        for (const row in this._rows) {\n            if (row >= minRow && row <= maxRow) {\n                rowsToProcess.push(row);\n            }\n        }\n\n        for (const row of rowsToProcess) {\n            const rowArr = this._rows[row];\n\n            // Collect columns to delete\n            const colsToDelete = [];\n            for (const col in rowArr) {\n                if (col >= minCol && col <= maxCol) {\n                    colsToDelete.push(col);\n                }\n            }\n\n            // Delete the collected columns\n            for (const col of colsToDelete) {\n                delete rowArr[col];\n                this.decrementRowSize(row);\n                this._colCounts[col]--;\n                deletedCount++;\n\n                if (col == this._leftCol || col == this._rightCol) {\n                    boundariesChanged = true;\n                }\n            }\n\n            // Clean empty rows\n            if (this._data[row].size === 0) {\n                delete this._data[row];\n                this._totalRows--;\n                boundariesChanged = true;\n            }\n        }\n\n        this._valueCount -= deletedCount;\n        if (boundariesChanged) {\n            this._recalculateBoundaries();\n        }\n\n        return deletedCount;\n    }\n\n    getCells(startRow, startCol, endRow, endCol) {\n        const cells = [];\n        const [minRow, maxRow] = [Math.min(startRow, endRow), Math.max(startRow, endRow)];\n        const [minCol, maxCol] = [Math.min(startCol, endCol), Math.max(startCol, endCol)];\n\n        // Get and sort rows in range\n        const rows = Object.keys(this._data)\n            .map(Number)\n            .filter(row => row >= minRow && row <= maxRow)\n\n        for (const row of rows) {\n            // Get and sort columns in range\n            const cols = Object.keys(this._data[row])\n                .map(Number)\n                .filter(col => col >= minCol && col <= maxCol)\n\n            for (const col of cols) {\n                cells.push({\n                    row,\n                    col,\n                    value: this._data[row][col]\n                });\n            }\n        }\n\n        return cells;\n    }\n    getCellsForce(startRow, startCol, endRow, endCol) {\n        const cells = [];\n        for (let row = startRow; row <= endRow; row++) {\n            for(let col = startCol; col <= endCol; col++) {\n                cells.push({\n                    row,\n                    col,\n                });\n            }\n        }\n\n        return cells;\n    }\n\n    // Accessors\n    get topRow() { return this._topRow === Infinity ? null : this._topRow; }\n    get bottomRow() { return this._bottomRow === -Infinity ? null : this._bottomRow; }\n    get leftCol() { return this._leftCol === Infinity ? null : this._leftCol; }\n    get rightCol() { return this._rightCol === -Infinity ? null : this._rightCol; }\n    get totalRows() { return this._totalRows; }       // Rows with at least one cell\n    get totalColumns() { return this._totalCols; }    // Columns with at least one cell\n    get totalValues() { return this._totalValues; }\n    get rowCount() {\n        return this._topRow !== Infinity && this._bottomRow !== -Infinity\n            ? this._bottomRow - this._topRow + 1\n            : 0;\n    }\n    get colCount() {\n        return this._leftCol !== Infinity && this._rightCol !== -Infinity\n            ? this._rightCol - this._leftCol + 1\n            : 0;\n    }\n    get valueCount() { return this._valueCount; }\n\n    get allDimensions() {\n        return {\n            topRow: this.topRow,\n            bottomRow: this.bottomRow,\n            leftCol: this.leftCol,\n            rightCol: this.rightCol,\n            rowCount: this.rowCount,\n            colCount: this.colCount,\n            totalValues: this.totalValues\n        }\n    }\n\n    clear() {\n        this._data = [];\n        this._topRow = Infinity;\n        this._bottomRow = -Infinity;\n        this._leftCol = Infinity;\n        this._rightCol = -Infinity;\n        this._valueCount = 0;\n    }\n\n    forEach(callback) {\n        let counter = 0;\n        for (let row in this._data) {\n            if (row === 'count') continue;\n            for (let col in this._data[row]) {\n                callback(this._data[row][col], row, col, counter++);\n            }\n        }\n    }\n}","import FinData from \"./financial/FinData\";\nimport { dependencyTree, reverseDependencyTree, tickerReg } from \"./dependencytracker\";\n\nexport default class ExpressionParser {\n    constructor(data) {\n        this.data = data; // Spreadsheet data\n        this.finData = new FinData();\n    }\n\n    // Add a dependency relationship\n    addDependency(source, target) {\n        const sr = source[0], sc = source[1];\n        const tr = target[0], tc = target[1];\n        if (!dependencyTree[tr]) dependencyTree[tr] = {};\n        if (!dependencyTree[tr][tc]) dependencyTree[tr][tc] = {};\n        if (!dependencyTree[tr][tc][sr]) dependencyTree[tr][tc][sr] = {};\n        dependencyTree[tr][tc][sr][sc] = true;\n\n        if (!reverseDependencyTree[sr]) reverseDependencyTree[sr] = {};\n        if (!reverseDependencyTree[sr][sc]) reverseDependencyTree[sr][sc] = {};\n        if (!reverseDependencyTree[sr][sc][tr]) reverseDependencyTree[sr][sc][tr] = {};\n        reverseDependencyTree[sr][sc][tr][tc] = true;\n    }\n\n    // Tokenize the input expression\n    tokenize(expression) {\n        // Remove leading '=' if present\n        if (expression.startsWith('=')) {\n            expression = expression.slice(1);\n        }\n\n        const tokens = [];\n        const regex = /\\s*(=>|[-+*/^()]|[A-Za-z_]\\w*|\\d*\\.?\\d+|\\S)\\s*/g;\n        let match;\n        while ((match = regex.exec(expression)) !== null) {\n            tokens.push(match[1]);\n        }\n        return tokens;\n    }\n\n    static tokenizeWithIndex(expression) {\n        // Remove leading '=' if present\n        if (expression.startsWith('=')) {\n            expression = expression.slice(1);\n        }\n\n        const tokens = [];\n        const regex = /\\s*(=>|[-+*/^()]|[A-Za-z_]\\w*|\\d*\\.?\\d+|\\S)\\s*/dg;\n        let match;\n        while ((match = regex.exec(expression)) !== null) {\n            tokens.push([match[1], match.indices[1]]);\n        }\n        return tokens;\n    }\n\n    // Parse the tokens into an AST\n    parse(tokens) {\n        let index = 0;\n\n        const parseExpression = () => {\n            let left = parseTerm();\n            while (index < tokens.length && (tokens[index] === '+' || tokens[index] === '-')) {\n                const operator = tokens[index];\n                index++;\n                const right = parseTerm();\n                left = { type: 'BinaryExpression', operator, left, right };\n            }\n            return left;\n        };\n\n        const parseTerm = () => {\n            let left = parseFactor();\n            while (index < tokens.length && (tokens[index] === '*' || tokens[index] === '/')) {\n                const operator = tokens[index];\n                index++;\n                const right = parseFactor();\n                left = { type: 'BinaryExpression', operator, left, right };\n            }\n            return left;\n        };\n\n        const parseFactor = () => {\n            if (tokens[index] === '(') {\n                index++;\n                const expr = parseExpression();\n                if (tokens[index] !== ')') {\n                    throw new Error('Expected closing parenthesis');\n                }\n                index++;\n                return expr;\n            } else if (/^\\d+$/.test(tokens[index])) {\n                return { type: 'Number', value: parseFloat(tokens[index++]) };\n            } else if (tokens[index] === ':') {\n                return { type: 'RangeReference', value: tokens[index++] };\n            } else if (/^[A-Za-z]+\\d+$/.test(tokens[index])) {\n                if (tokens[index + 1] === ':') {\n                    return { type: 'RangeReference', value: `${tokens[index++]}${tokens[index++]}${tokens[index++]}` };\n                }\n                return { type: 'CellReference', value: tokens[index++] };\n            } else if (/^[A-Za-z_]\\w*$/.test(tokens[index])) {\n                return { type: 'Function', name: tokens[index++], args: parseArguments() };\n            } else {\n                throw new Error(`Unexpected token: ${tokens[index]}`);\n            }\n        };\n\n        const parseArguments = () => {\n            const args = [];\n            if (tokens[index] === '(') {\n                index++;\n                while (tokens[index] !== ')') {\n                    args.push(parseExpression());\n                    if (tokens[index] === ',') {\n                        index++;\n                    }\n                }\n                index++;\n            }\n            return args;\n        };\n\n        return parseExpression();\n    }\n\n    // Evaluate the AST\n    evaluate(ast, source) {\n        // if (source) {\n        //     // Remove old dependencies before evaluating\n        //     this.removeDependencies(source);\n        // }\n        switch (ast.type) {\n            case 'Number':\n                return ast.value;\n            case 'CellReference':\n                if (source) {\n                    const { row, col } = this.parseCellReference(ast.value);\n                    this.addDependency(source, [row, col]);\n                }\n                return this.getCellValue(ast.value);\n            case 'RangeReference':\n                if (source) {\n                    const [startCell, endCell] = ast.value.split(':');\n                    const start = this.parseCellReference(startCell);\n                    const end = this.parseCellReference(endCell);\n\n                    for (let row = start.row; row <= end.row; row++) {\n                        for (let col = start.col; col <= end.col; col++) {\n                            this.addDependency(source, [row, col]);\n                        }\n                    }\n                }\n                return this.getRangeValues(ast.value);\n            case 'BinaryExpression':\n                return this.evaluateBinaryExpression(ast, source);\n            case 'Function':\n                return this.evaluateFunction(ast, source);\n            default:\n                throw new Error(`Unknown AST node type: ${ast.type}`);\n        }\n    }\n\n    // Evaluate binary expressions (e.g., +, -, *, /, ^)\n    evaluateBinaryExpression(ast, source) {\n        const left = this.evaluate(ast.left, source);\n        const right = this.evaluate(ast.right, source);\n        switch (ast.operator) {\n            case '+':\n                return left + right;\n            case '-':\n                return left - right;\n            case '*':\n                return left * right;\n            case '/':\n                return left / right;\n            case '^':\n                return Math.pow(left, right);\n            default:\n                throw new Error(`Unknown operator: ${ast.operator}`);\n        }\n    }\n\n    // Evaluate functions (e.g., SUM, AVERAGE)\n    evaluateFunction(ast, source) {\n        const args = ast.args.map(arg => this.evaluate(arg));\n        switch (ast.name.toUpperCase()) {\n            case 'SUM':\n                return args.flat().reduce((sum, val) => sum + val, 0);\n            case 'AVERAGE':\n                const values = args.flat();\n                return values.reduce((sum, val) => sum + val, 0) / values.length;\n            case 'ERROR':\n                return 'ERROR';\n            case 'REFERROR':\n                return 'REFERROR';\n            default:\n                // tickerReg[source[0]]\n                console.log('subbing', ast.name)\n                if (!tickerReg[ast.name]) tickerReg[ast.name] = {};\n                tickerReg[ast.name][`${source[0]},${source[1]}`] = true;\n                if (this.finData.get('YA', ast.name)) {\n                    return this.finData.get('YA', ast.name).price;\n                } else {\n                    return '';\n                }\n                // throw new Error(`Unknown function: ${ast.name}`);\n        }\n    }\n\n    getCellText(row, col) {\n        return this.data.get(row, col)?.text ?? '';\n    }\n\n    // Get the value of a cell reference (e.g., A1, B2)\n    getCellValue(cellRef) {\n        const { row, col } = this.parseCellReference(cellRef);\n        if (row < 0 || row > this.bottomRow || col < 0 || col > this.data.rightCol) {\n            return '';\n            throw new Error(`Invalid cell reference: ${cellRef}`);\n        }\n        const value = this.getCellText(row, col);\n\n        // If the cell value is a formula (starts with '='), evaluate it recursively\n        if (typeof value === 'string' && value.startsWith('=')) {\n            return this.evaluateExpression(value, [row, col]);\n        }\n\n        // Otherwise, treat it as a literal value\n        return typeof value === 'number' ? value : parseFloat(value) || 0;\n    }\n\n    // Get the values of a range reference (e.g., A1:B2)\n    getRangeValues(rangeRef) {\n        const [startCell, endCell] = rangeRef.split(':');\n        const start = this.parseCellReference(startCell);\n        const end = this.parseCellReference(endCell);\n\n        const values = [];\n        for (let row = start.row; row <= end.row; row++) {\n            for (let col = start.col; col <= end.col; col++) {\n                if (row < 0 || row >= this.data.bottomRow || col < 0 || col >= this.rightCol) {\n                    throw new Error(`Invalid cell in range: ${rangeRef}`);\n                }\n                const value = this.getCellText(row, col);\n\n                // If the cell value is a formula (starts with '='), evaluate it recursively\n                if (typeof value === 'string' && value.startsWith('=')) {\n                    values.push(this.evaluateExpression(value, [row,col]));\n                } else {\n                    values.push(typeof value === 'number' ? value : parseFloat(value) || 0);\n                }\n            }\n        }\n\n        return values;\n    }\n\n    // Parse a cell reference (e.g., A1 => { row: 0, col: 0 })\n    parseCellReference(cellRef) {\n        const colLetter = cellRef.match(/[A-Za-z]+/)?.[0];\n        const rowNumber = cellRef.match(/\\d+/)?.[0];\n\n        if (!colLetter || !rowNumber) {\n            throw new Error(`Invalid cell reference: ${cellRef}`);\n        }\n\n        const col = colLetter.split('').reduce((acc, char) => acc * 26 + (char.toUpperCase().charCodeAt(0) - 64), 0) - 1;\n        const row = parseInt(rowNumber, 10) - 1;\n\n        return { row, col };\n    }\n\n    static parseCellReference(cellRef) {\n        const colLetter = cellRef.match(/[A-Za-z]+/)?.[0];\n        const rowNumber = cellRef.match(/\\d+/)?.[0];\n\n        if (!colLetter || !rowNumber) {\n            throw new Error(`Invalid cell reference: ${cellRef}`);\n        }\n\n        const col = colLetter.split('').reduce((acc, char) => acc * 26 + (char.toUpperCase().charCodeAt(0) - 64), 0) - 1;\n        const row = parseInt(rowNumber, 10) - 1;\n\n        return { row, col };\n    }\n\n    getAst(expression) {\n        if (expression.startsWith('=')) {\n            const tokens = this.tokenize(expression);\n            return this.parse(tokens);\n        }\n        return null;\n    }\n\n    // Main function to parse and evaluate an expression\n    evaluateExpression(expression, source) {\n        if (typeof expression !== 'string') {\n            return expression; // Return non-string values as-is\n        }\n\n        // If the expression starts with '=', parse and evaluate it\n        if (expression.startsWith('=')) {\n            const tokens = this.tokenize(expression);\n            const ast = this.parse(tokens);\n            return this.evaluate(ast, source);\n        }\n\n        // If the expression does not start with '=', treat it as a literal value\n        return parseFloat(expression) || expression;\n    }\n}","export default class FinData {\n    static _instance: any;\n    _data: Object;\n    constructor() {\n        if (FinData._instance) {\n            return FinData._instance\n        }\n        FinData._instance = this;\n        this._data = {};\n    }\n    store(namespace: string, key: string, value: any) {\n        if (!this._data[namespace]) this._data[namespace] = {};\n        this._data[namespace][key] = value;\n    }\n    get(namespace: string, key: string) {\n        if (!this._data[namespace]) return null;\n        if (!Object.hasOwn(this._data[namespace], key)) return null;\n        return this._data[namespace][key];\n    }\n}","export const dependencyTree = {\n\n};\n\nexport const reverseDependencyTree = {\n\n};\n\nexport const tickerReg = {\n\n};\n\nfunction isEmpty(obj) {\n    for(let i in obj) {\n        if (Object.hasOwn(obj,i)) return false;\n    }\n    return true;\n}\n\nexport function shiftDependenciesUp(pivotRow) {\n    const cellsToUpdate = [];\n    function helper(tree, depth = 0, didShift = false) {\n        const newDeps = {};\n        if (depth === 2) {\n            for (let row in tree) {\n                let tmp = tree[row];\n                if (row > pivotRow) {\n                    newDeps[parseInt(row) - 1] = tree[row];\n                    delete tree[row];\n                }\n                if (didShift) {\n                    for (let col in tmp) {\n                        cellsToUpdate.push([row, col]);\n                    }\n\n                }\n            }\n        } else if (depth === 0) {\n            for (let row in tree) {\n                if (row == pivotRow) {\n                    helper(tree[row], 1,true);\n                    delete tree[row];\n                } else if (row > pivotRow) {\n                    newDeps[parseInt(row) - 1] = helper(tree[row], 1, true);\n                    delete tree[row];\n                } else {\n                    helper(tree[row], 1);\n                }\n            }\n        } else if (depth === 1) {\n            for (let col in tree) {\n                helper(tree[col], 2, didShift);\n            }\n        }\n        for (let rowOrCol in newDeps) { // in place update\n            tree[rowOrCol] = newDeps[rowOrCol];\n        }\n        return tree;\n    }\n    helper(dependencyTree);\n    return cellsToUpdate;\n}\nexport function shiftDependenciesDown(pivotRow) {\n    const cellsToUpdate = [];\n    function helper(tree, depth = 0,didShift=false) {\n        const newDeps = {};\n        if (depth === 2) {\n            for (let row in tree) {\n                let tmp = tree[row];\n                if (row >= pivotRow) {\n                    newDeps[parseInt(row) + 1] = tree[row];\n                    delete tree[row];\n                }\n                if (didShift) {\n                    for (let col in tmp) {\n                        cellsToUpdate.push([row, col]);\n                    }\n\n                }\n            }\n        } else if (depth === 0) {\n            for (let row in tree) {\n                if (row >= pivotRow) {\n                    newDeps[parseInt(row) + 1] = helper(tree[row], 1,true);\n                    delete tree[row];\n                } else {\n                    helper(tree[row], 1);\n                }\n            }\n        } else if (depth === 1) {\n            for (let col in tree) {\n                helper(tree[col], 2,didShift);\n            }\n        }\n        for (let rowOrCol in newDeps) { // in place update\n            tree[rowOrCol] = newDeps[rowOrCol];\n        }\n        return tree;\n    }\n    helper(dependencyTree);\n    return cellsToUpdate;\n}\nexport function shiftDependenciesRight(pivotCol) {\n    const cellsToUpdate = [];\n    function helper(tree, depth = 0, didshift, _row) {\n        const newDeps = {};\n        if (depth === 0 || depth === 2) {\n            for (let row in tree) {\n                helper(tree[row], depth + 1, didshift, row);\n            }\n        }\n        else if (depth === 1) {\n            for (let col in tree) {\n                if (col >= pivotCol) {\n                    newDeps[parseInt(col) + 1] = helper(tree[col], 2,true, null);\n                    delete tree[col];\n                } else {\n                    helper(tree[col], 2);\n                }\n            }\n        } else if (depth === 3) {\n            for (let col in tree) {\n                if (col >= pivotCol) {\n                    newDeps[parseInt(col) + 1] = true;\n                    delete tree[col];\n                }\n                if (didshift) {\n                    cellsToUpdate.push([_row, col]);\n                }\n            }\n        }\n        for (let rowOrCol in newDeps) { // in place update\n            tree[rowOrCol] = newDeps[rowOrCol];\n        }\n        return tree;\n    }\n    helper(dependencyTree);\n    return cellsToUpdate;\n}\nexport function shiftDependenciesLeft(pivotCol) {\n    const cellsToUpdate = [];\n    function helper(tree, depth = 0, didshift, _row) {\n        const newDeps = {};\n        if (depth === 0 || depth === 2) {\n            for (let row in tree) {\n                helper(tree[row], depth + 1, didshift, row);\n            }\n        }\n        else if (depth === 1) {\n            for (let col in tree) {\n                if (col == pivotCol) {\n                    helper(tree[col], 2, true);\n                    delete tree[col];\n                } else if (col >= pivotCol) {\n                    newDeps[parseInt(col) - 1] = helper(tree[col], 2,true, null);\n                    delete tree[col];\n                } else {\n                    helper(tree[col], 2);\n                }\n            }\n        } else if (depth === 3) {\n            for (let col in tree) {\n                if (col >= pivotCol) {\n                    newDeps[parseInt(col) - 1] = true;\n                    delete tree[col];\n                }\n                if (didshift) {\n                    cellsToUpdate.push([_row, col]);\n                }\n            }\n        }\n        for (let rowOrCol in newDeps) { // in place update\n            tree[rowOrCol] = newDeps[rowOrCol];\n        }\n        return tree;\n    }\n    helper(dependencyTree);\n    return cellsToUpdate;\n}\n\nexport function removeDependents(deptRow, deptCol) {\n    const dependencies = getDependencies(deptRow, deptCol);\n    for(const [drow, dcol] of dependencies) {\n        const dcell = dependencyTree[drow]?.[dcol];\n        if (!dcell) continue;\n        if (dcell[deptRow]?.[deptCol]) {\n            delete dcell[deptRow][deptCol];\n            if (isEmpty(dcell[deptRow])) {\n                delete dcell[deptRow];\n            }\n        }\n    }\n    removeDependencies(deptRow, deptCol);\n}\nexport function getDependencies(row,col) {\n    const deps = [];\n    const t = reverseDependencyTree;\n    const cell = t[row]?.[col];\n    if (!cell) return [];\n    for(let drow in cell) {\n        for(let dcol in cell[drow]) {\n            deps.push([drow,dcol]);\n        }\n    }\n    return deps;\n}\nexport function removeDependencies(row, col) {\n    const t = reverseDependencyTree;\n    if (!t[row]?.[col]) return;\n    delete t[row][col];\n    if (isEmpty(t[row])) delete t[row];\n}","export function launchFormatMenu() {\n    const formatWindow = window.open('', 'target=_blank', 'width=190,height=400');\n    formatWindow.document.body.innerHTML = `\n        <style>\n            .format-menu {\n                font-family: Arial, sans-serif;\n                width: 220px;\n                padding: 12px;\n                background: #f8f8f8;\n                border: 1px solid #999999;\n                border-radius: 4px;\n                box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n            }\n            .menu-section {\n                margin-bottom: 12px;\n            }\n            .menu-title {\n                font-weight: bold;\n                margin-bottom: 6px;\n                color: #555;\n                font-size: 13px;\n            }\n            select, input {\n                width: 100%;\n                padding: 6px;\n                border: 1px solid #ccc;\n                border-radius: 3px;\n                margin-bottom: 8px;\n            }\n            .color-options {\n                display: flex;\n                gap: 4px;\n                margin-top: 6px;\n            }\n            .color-option {\n                width: 20px;\n                height: 20px;\n                border-radius: 3px;\n                cursor: pointer;\n                border: 1px solid #999999;\n            }\n            .format-btn {\n                flex: 1;\n                padding: 6px;\n                background: white;\n                border: 1px solid #ccc;\n                border-radius: 3px;\n                cursor: pointer;\n                text-align: center;\n                font-size: 12px;\n            }\n            .format-btn:hover {\n                background: #f0f0f0;\n            }\n            .format-btn.active {\n                background: #999999;\n                border-color: #999;\n            }\n            .color-option:hover {\n                border-color: #999;\n            }\n            .alignment-options,.border-options {\n                display: flex;\n                gap: 4px;\n            }\n            .alignment-btn,.border-btn {\n                flex: 1;\n                padding: 6px;\n                background: white;\n                border: 1px solid #ccc;\n                border-radius: 3px;\n                cursor: pointer;\n                text-align: center;\n            }\n            .alignment-btn:hover,.border-btn:hover {\n                background: #f0f0f0;\n            }\n            .alignment-btn.active,.border-btn.active {\n                background: #999999;\n                border-color: #999;\n            }\n            .baseline-visual {\n                display: inline-block;\n                width: 100%;\n                height: 40px;\n                position: relative;\n                margin-top: 8px;\n                border: 1px solid #eee;\n                background: repeating-linear-gradient(\n                    to bottom,\n                    #f8f8f8,\n                    #f8f8f8 1px,\n                    #fff 1px,\n                    #fff 10px\n                );\n            }\n            .baseline-line {\n                position: absolute;\n                left: 0;\n                right: 0;\n                height: 1px;\n                background-color: red;\n            }\n            .baseline-text {\n                position: absolute;\n                left: 50%;\n                transform: translateX(-50%);\n                white-space: nowrap;\n            }\n        </style>\n        <div class=\"format-menu\">\n            <div class=\"menu-section\">\n                <div class=\"menu-title\">Cell Type</div>\n                <select id=\"cellType\">\n                    <option value=\"text\" selected>Text</option>\n                    <option value=\"button\">Button</option>\n                    <option value=\"linechart\">Line Chart</option>\n                </select>\n            </div>\n            <div class=\"menu-section\">\n                <div class=\"menu-title\">Font Size</div>\n                <select id=\"fontSize\">\n                    <option value=\"8\">8</option>\n                    <option value=\"10\" selected>10</option>\n                    <option value=\"12\">12</option>\n                    <option value=\"14\">14</option>\n                    <option value=\"16\">16</option>\n                    <option value=\"18\">18</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"24\">24</option>\n                </select>\n            </div>\n            <div class=\"menu-section\">\n                <div class=\"menu-title\">Font Color</div>\n                <input type=\"color\" id=\"fontColor\" value=\"#000000\">\n                <div class=\"color-options\">\n                    <div class=\"color-option\" style=\"background: #000000;\" data-color=\"#000000\"></div>\n                    <div class=\"color-option\" style=\"background: #ff0000;\" data-color=\"#ff0000\"></div>\n                    <div class=\"color-option\" style=\"background: #00aa00;\" data-color=\"#00aa00\"></div>\n                    <div class=\"color-option\" style=\"background: #0000ff;\" data-color=\"#0000ff\"></div>\n                    <div class=\"color-option\" style=\"background: #ff9900;\" data-color=\"#ff9900\"></div>\n                </div>\n            </div>\n            <div class=\"menu-section\">\n                <div class=\"menu-title\">Text Alignment</div>\n                <div class=\"alignment-options\">\n                    <div class=\"alignment-btn\" data-align=\"left\" title=\"Align Left\">⎡</div>\n                    <div class=\"alignment-btn\" data-align=\"center\" title=\"Align Center\">⎢</div>\n                    <div class=\"alignment-btn\" data-align=\"right\" title=\"Align Right\">⎣</div>\n                </div>\n            </div>\n            <div class=\"menu-section\">\n                <div class=\"menu-title\">Borders</div>\n                <div class=\"border-options\">\n                    <div class=\"border-btn\" data-border=\"${(1 << 1)}\" title=\"Border Left\">Left</div>\n                    <div class=\"border-btn\" data-border=\"${(1 << 2)}\" title=\"Border Top\">Top</div>\n                    <div class=\"border-btn\" data-border=\"${(1 << 3)}\" title=\"Border Right\">Right</div>\n                    <div class=\"border-btn\" data-border=\"${(1 << 4)}\" title=\"Border Bottom\">Bottom</div>\n                </div>\n            </div>\n            <div class=\"menu-section\">\n            <div class=\"menu-title\">Text Baseline</div>\n                <div class=\"option-group\">\n                    <div class=\"format-btn\" data-baseline=\"alphabetic\" title=\"Alphabetic\">A</div>\n                    <div class=\"format-btn\" data-baseline=\"top\" title=\"Top\">Top</div>\n                    <div class=\"format-btn\" data-baseline=\"middle\" title=\"Middle\">Mid</div>\n                    <div class=\"format-btn\" data-baseline=\"bottom\" title=\"Bottom\">Bot</div>\n                </div>\n                <div class=\"baseline-visual\" id=\"baselineDemo\">\n                    <div class=\"baseline-line\" id=\"baselineIndicator\"></div>\n                    <div class=\"baseline-text\" id=\"baselineText\">Text</div>\n                </div>\n            </div>\n        </div>\n    `;\n    const cbs = [];\n    function onChange(type, value) {\n        for(let cb of cbs) {\n            cb(type,value);\n        }\n    }\n    formatWindow.document.title = 'Format Menu';\n    formatWindow.document.getElementById('fontSize').addEventListener('change', function () {\n        onChange('fontSize', this.value);\n    });\n    formatWindow.document.getElementById('cellType').addEventListener('change', function () {\n        onChange('cellType', this.value);\n    });\n    formatWindow.document.getElementById('fontColor').addEventListener('input', function () {\n        onChange('color', this.value);\n    });\n    // Quick color options\n    formatWindow.document.querySelectorAll('.color-option').forEach(option => {\n        option.addEventListener('click', function () {\n            const color = this.getAttribute('data-color');\n            formatWindow.document.getElementById('fontColor').value = color;\n            onChange('color', color);\n        });\n    });\n    // Alignment buttons\n    formatWindow.document.querySelectorAll('.alignment-btn').forEach(function (btn) {\n        btn.addEventListener('click', function () {\n            // Remove active class from all buttons\n            formatWindow.document.querySelectorAll('.alignment-btn').forEach(function (b) {\n                b.classList.remove('active');\n            });\n            // Add active class to clicked button\n            this.classList.add('active');\n            const alignment = this.getAttribute('data-align');\n            onChange('textAlign', alignment);\n        });\n    });\n    // Border buttons\n    formatWindow.document.querySelectorAll('.border-btn').forEach(function (btn) {\n        btn.addEventListener('click', function () {\n            this.classList.toggle('active');\n            let border = 0;\n            formatWindow.document.querySelectorAll('.border-btn.active').forEach(function (b) {\n                const databorder = b.getAttribute('data-border');\n                border |= databorder;\n            });\n            // Remove active class from all buttons\n            // const border = this.getAttribute('data-border');\n            onChange('border', border);\n        });\n    });\n    // Baseline buttons\n    formatWindow.document.querySelectorAll('[data-baseline]').forEach(function (btn) {\n        // Update baseline visual demonstration\n        const baselineOptions = {\n            'alphabetic': { position: 30, description: 'Normal text baseline' },\n            'top': { position: 5, description: 'Top of the em square' },\n            'middle': { position: 20, description: 'Middle of the em square' },\n            'bottom': { position: 35, description: 'Bottom of the em square' },\n            'hanging': { position: 5, description: 'Hanging baseline (like Hindi)' },\n            'ideographic': { position: 35, description: 'Ideographic baseline (like CJK)' }\n        };\n        function updateBaselineVisual(baseline) {\n            const demo = formatWindow.document.getElementById('baselineDemo');\n            const indicator = formatWindow.document.getElementById('baselineIndicator');\n            const text = formatWindow.document.getElementById('baselineText');\n            if (baselineOptions[baseline]) {\n                const pos = baselineOptions[baseline].position;\n                indicator.style.top = `${pos}px`;\n                text.style.top = `${pos}px`;\n                text.textContent = baseline;\n            }\n        }\n        btn.addEventListener('click', function () {\n            formatWindow.document.querySelectorAll('[data-baseline]').forEach(b => b.classList.remove('active'));\n            this.classList.add('active');\n            const baseline = this.getAttribute('data-baseline');\n            updateBaselineVisual(baseline);\n            onChange('textBaseline', baseline);\n        });\n    });\n    return {win: formatWindow, addListener: (fn) => cbs.push(fn)};\n}","export function createLineChart(data, container, width, height) {\n    console.log('createlinecahrt?')\n    function render(data, width, height) {\n        container.innerHTML = '';\n        container.innerHTML = `\n                    <div class=\"chart-container\">\n                        <div class=\"chart\"></div>\n                    </div>\n                    <div class=\"tooltip\"></div>\n                `;\n        const chart = container.querySelector('.chart');\n        const tooltip = container.querySelector('.tooltip');\n        const parsedData = data.map(item => ({\n            value: parseFloat(item[0]),\n            date: item[1]\n        }));\n\n        // Get dimensions\n        // const width = chart.offsetWidth;\n        // const height = chart.offsetHeight;\n        const margin = { top: 20, right: 50, bottom: 50, left: 50 };\n        const chartWidth = width - margin.left - margin.right;\n        const chartHeight = height - margin.top - margin.bottom;\n\n        // Create SVG\n        const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        svg.setAttribute(\"width\", width);\n        svg.setAttribute(\"height\", height);\n        svg.style.overflow = 'visible';\n        chart.appendChild(svg);\n\n        // Create chart group\n        const chartGroup = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n        chartGroup.setAttribute(\"transform\", `translate(${margin.left}, ${margin.top})`);\n        svg.appendChild(chartGroup);\n\n        // Calculate scales\n        const xScale = (date, index) => {\n            const totalPoints = parsedData.length;\n            // Add slight padding to the sides\n            const padding = 0.02 * chartWidth;\n            return padding + (index / (totalPoints - 1)) * (chartWidth - 2 * padding);\n        };\n\n        const maxValue = Math.max(...parsedData.map(d => d.value));\n        const yScale = (value) => {\n            return chartHeight - (value / maxValue) * chartHeight;\n        };\n\n        // Create line\n        const path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        let pathData = \"M\";\n\n        parsedData.forEach((d, i) => {\n            const x = xScale(d.date, i);\n            const y = yScale(d.value);\n\n            pathData += `${x},${y} `;\n\n            if (i < parsedData.length - 1) {\n                pathData += \"L\";\n            }\n\n            // Add points\n            const point = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n            point.setAttribute(\"class\", \"point\");\n            point.setAttribute(\"cx\", x);\n            point.setAttribute(\"cy\", y);\n            point.setAttribute(\"r\", 4);\n            point.setAttribute(\"data-value\", d.value);\n            point.setAttribute(\"data-date\", d.date);\n\n            // Add hover events\n            point.addEventListener('mouseover', (e) => {\n                tooltip.style.display = 'block';\n                tooltip.innerHTML = `Date: ${d.date}<br>Value: ${d.value}`;\n                tooltip.style.left = (e.pageX + 10) + 'px';\n                tooltip.style.top = (e.pageY - 10) + 'px';\n            });\n\n            point.addEventListener('mouseout', () => {\n                tooltip.style.display = 'none';\n            });\n\n            chartGroup.appendChild(point);\n        });\n\n        path.setAttribute(\"class\", \"line\");\n        path.setAttribute(\"d\", pathData);\n        chartGroup.appendChild(path);\n\n        // Add x-axis labels (dates)\n        const labelPadding = 5; // Additional padding for labels\n        parsedData.forEach((d, i) => {\n            if (i % Math.ceil(parsedData.length / 5) === 0 || i === parsedData.length - 1) {\n                const xPos = xScale(d.date, i);\n\n                // Only draw label if it fits within bounds\n                if (xPos >= 0 && xPos <= chartWidth) {\n                    const label = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n                    label.setAttribute(\"class\", \"x-axis\");\n                    label.setAttribute(\"x\", xPos);\n                    label.setAttribute(\"y\", chartHeight + 20);\n                    label.setAttribute(\"text-anchor\", \"middle\");\n\n                    // Shorten date format if needed\n                    const labelText = d.date.length > 10 ? d.date.substring(5) : d.date;\n                    label.textContent = labelText;\n\n                    // Check if label would extend beyond right edge\n                    const textLength = labelText.length * 6; // Approximate width\n                    if (xPos + textLength / 2 > chartWidth) {\n                        label.setAttribute(\"text-anchor\", \"end\");\n                        label.setAttribute(\"x\", chartWidth - labelPadding);\n                    }\n                    // Check if label would extend beyond left edge\n                    else if (xPos - textLength / 2 < 0) {\n                        label.setAttribute(\"text-anchor\", \"start\");\n                        label.setAttribute(\"x\", labelPadding);\n                    }\n\n                    chartGroup.appendChild(label);\n                }\n            }\n        });\n\n        // Add y-axis labels (values)\n        for (let i = 0; i <= 5; i++) {\n            const value = (maxValue / 5) * i;\n            const label = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n            label.setAttribute(\"class\", \"y-axis\");\n            label.setAttribute(\"x\", -10);\n            label.setAttribute(\"y\", yScale(value));\n            label.setAttribute(\"text-anchor\", \"end\");\n            label.setAttribute(\"dy\", \"0.35em\");\n            label.textContent = value.toFixed(1);\n            chartGroup.appendChild(label);\n\n            // Add grid line\n            const gridLine = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n            gridLine.setAttribute(\"x1\", 0);\n            gridLine.setAttribute(\"y1\", yScale(value));\n            gridLine.setAttribute(\"x2\", chartWidth);\n            gridLine.setAttribute(\"y2\", yScale(value));\n            gridLine.setAttribute(\"stroke\", \"#eee\");\n            gridLine.setAttribute(\"stroke-dasharray\", \"2,2\");\n            chartGroup.insertBefore(gridLine, chartGroup.firstChild);\n        }\n\n        // Add axis titles\n        const xAxisTitle = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n        xAxisTitle.setAttribute(\"class\", \"x-axis\");\n        xAxisTitle.setAttribute(\"x\", chartWidth / 2);\n        xAxisTitle.setAttribute(\"y\", chartHeight + 40);\n        xAxisTitle.setAttribute(\"text-anchor\", \"middle\");\n        xAxisTitle.textContent = \"Date\";\n        chartGroup.appendChild(xAxisTitle);\n\n        const yAxisTitle = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n        yAxisTitle.setAttribute(\"class\", \"y-axis\");\n        yAxisTitle.setAttribute(\"transform\", \"rotate(-90)\");\n        yAxisTitle.setAttribute(\"x\", -chartHeight / 2);\n        yAxisTitle.setAttribute(\"y\", -40); // Adjusted to not overlap with labels\n        yAxisTitle.setAttribute(\"text-anchor\", \"middle\");\n        yAxisTitle.textContent = \"Value\";\n        chartGroup.appendChild(yAxisTitle);\n    }\n    function update() {\n        container.innerHTML = '';\n    }\n    function destroy() {\n        container.innerHTML = '';\n    }\n    render(data, width, height);\n    return { container, update, destroy, render };\n}","import YA from './ya';\n\nexport default class FinancialSubscriber {\n    ya: any;\n    tickListeners: Function[];\n    static _instance: any;\n    constructor() {\n        if (FinancialSubscriber._instance) {\n            return FinancialSubscriber._instance\n        }\n        FinancialSubscriber._instance = this;\n        this.ya = new YA();\n        this.tickListeners = [];\n        this.ya.addListener((data) => {\n            for(let listener of this.tickListeners) {\n                listener(data);\n            }\n        })\n    }\n    listenYA(tickers: []) {\n        this.ya.addSubs(tickers);\n    }\n    onTick(fn) {\n        this.tickListeners.push(fn);\n    }\n}","import FinData from \"./FinData\";\n\ndeclare var protobuf: any;\ndeclare var require: any;\n\n\nexport default class YA {\n    tickers: Set<any>;\n    connection: WebSocket | null;\n    data: FinData;\n    root: any;\n    Yaticker: any;\n    isOpen: boolean;\n    cbs: Function[];\n    constructor() {\n        this.tickers = new Set();\n        this.connection = null;\n        this.data = new FinData();\n        this.isOpen = false;\n        this.root = protobuf.Root.fromJSON(require(\"./YADATA.json\"));\n        this.Yaticker = this.root?.lookupType(\"yaticker\");\n        this.cbs = [];\n        // setInterval(() => {\n        //     const dummydata = { id: 'GME', price: Math.random() * 100 };\n        //     this.data.store('YA', dummydata.id, dummydata);\n        //     this.updateListeners(dummydata)\n        // }, 1000)\n    }\n    /**\n     * @returns something like '{\"subscribe\":[\"API\",\"^GSPC\",\"^DJI\",\"^IXIC\",\"^RUT\",\"CL=F\",\"GC=F\",\"NVDA\",\"GME\",\"RKT\",\"GAP\",\"BLD\",\"IBP\"]}'\n     */\n    getSubString() {\n        return JSON.stringify({\n            subscribe: [...this.tickers]\n        });\n    }\n    hasSubs() {\n        return this.tickers.size > 0;\n    }\n    addListener(cb) {\n        this.cbs.push(cb);\n    }\n    updateSubs() {\n        if (this.connection) {\n            if (this.hasSubs()) {\n                this.connection!.send(this.getSubString());\n            }\n        } else {\n            this.connection = new WebSocket(atob(\"d3NzOi8vc3RyZWFtZXIuZmluYW5jZS55YWhvby5jb20v\"));\n            this.connection.onopen = () => {\n                this.isOpen = true;\n                if (this.hasSubs()) {\n                    this.connection!.send(this.getSubString());\n                }\n            }\n            this.connection.onmessage = this.onmessage;\n        }\n        return this.connection;\n    }\n    updateListeners(data) {\n        for(let cb of this.cbs) {\n            cb(data);\n        }\n    }\n    onmessage = (event: any) => {\n        try {\n            const messageData = event.data;\n            const data: any = this.Yaticker?.decode(\n                new Uint8Array(\n                    atob(messageData)\n                        .split(\"\")\n                        .map((c) => c.charCodeAt(0)),\n                ),\n            );\n            if (data.id.startsWith('^')) {\n                data._id = data.id;\n                data.id = data.id.slice(1);\n            }\n            this.data.store('YA', data.id, data);\n            console.log('tick data:', data);\n            this.updateListeners(data);\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    async fetchTicker(symbol) {\n\n    }\n    addSubs(subs: string[]) {\n        for(let symbol of subs) {\n            if (!this.tickers.has(symbol)) {\n                this.fetchTicker(symbol);\n            }\n            this.tickers.add(symbol);\n        }\n        if (this.hasSubs()) {\n            this.updateSubs();\n        }\n    }\n}","{\n  \"options\": {\n    \"syntax\": \"proto3\"\n  },\n  \"nested\": {\n    \"yaticker\": {\n      \"fields\": {\n        \"id\": {\n          \"type\": \"string\",\n          \"id\": 1\n        },\n        \"price\": {\n          \"type\": \"float\",\n          \"id\": 2\n        },\n        \"time\": {\n          \"type\": \"sint64\",\n          \"id\": 3\n        },\n        \"currency\": {\n          \"type\": \"string\",\n          \"id\": 4\n        },\n        \"exchange\": {\n          \"type\": \"string\",\n          \"id\": 5\n        },\n        \"quoteType\": {\n          \"type\": \"QuoteType\",\n          \"id\": 6\n        },\n        \"marketHours\": {\n          \"type\": \"MarketHoursType\",\n          \"id\": 7\n        },\n        \"changePercent\": {\n          \"type\": \"float\",\n          \"id\": 8\n        },\n        \"dayVolume\": {\n          \"type\": \"sint64\",\n          \"id\": 9\n        },\n        \"dayHigh\": {\n          \"type\": \"float\",\n          \"id\": 10\n        },\n        \"dayLow\": {\n          \"type\": \"float\",\n          \"id\": 11\n        },\n        \"change\": {\n          \"type\": \"float\",\n          \"id\": 12\n        },\n        \"shortName\": {\n          \"type\": \"string\",\n          \"id\": 13\n        },\n        \"expireDate\": {\n          \"type\": \"sint64\",\n          \"id\": 14\n        },\n        \"openPrice\": {\n          \"type\": \"float\",\n          \"id\": 15\n        },\n        \"previousClose\": {\n          \"type\": \"float\",\n          \"id\": 16\n        },\n        \"strikePrice\": {\n          \"type\": \"float\",\n          \"id\": 17\n        },\n        \"underlyingSymbol\": {\n          \"type\": \"string\",\n          \"id\": 18\n        },\n        \"openInterest\": {\n          \"type\": \"sint64\",\n          \"id\": 19\n        },\n        \"optionsType\": {\n          \"type\": \"OptionType\",\n          \"id\": 20\n        },\n        \"miniOption\": {\n          \"type\": \"sint64\",\n          \"id\": 21\n        },\n        \"lastSize\": {\n          \"type\": \"sint64\",\n          \"id\": 22\n        },\n        \"bid\": {\n          \"type\": \"float\",\n          \"id\": 23\n        },\n        \"bidSize\": {\n          \"type\": \"sint64\",\n          \"id\": 24\n        },\n        \"ask\": {\n          \"type\": \"float\",\n          \"id\": 25\n        },\n        \"askSize\": {\n          \"type\": \"sint64\",\n          \"id\": 26\n        },\n        \"priceHint\": {\n          \"type\": \"sint64\",\n          \"id\": 27\n        },\n        \"vol_24hr\": {\n          \"type\": \"sint64\",\n          \"id\": 28\n        },\n        \"volAllCurrencies\": {\n          \"type\": \"sint64\",\n          \"id\": 29\n        },\n        \"fromcurrency\": {\n          \"type\": \"string\",\n          \"id\": 30\n        },\n        \"lastMarket\": {\n          \"type\": \"string\",\n          \"id\": 31\n        },\n        \"circulatingSupply\": {\n          \"type\": \"double\",\n          \"id\": 32\n        },\n        \"marketcap\": {\n          \"type\": \"double\",\n          \"id\": 33\n        }\n      },\n      \"nested\": {\n        \"QuoteType\": {\n          \"values\": {\n            \"NONE\": 0,\n            \"ALTSYMBOL\": 5,\n            \"HEARTBEAT\": 7,\n            \"EQUITY\": 8,\n            \"INDEX\": 9,\n            \"MUTUALFUND\": 11,\n            \"MONEYMARKET\": 12,\n            \"OPTION\": 13,\n            \"CURRENCY\": 14,\n            \"WARRANT\": 15,\n            \"BOND\": 17,\n            \"FUTURE\": 18,\n            \"ETF\": 20,\n            \"COMMODITY\": 23,\n            \"ECNQUOTE\": 28,\n            \"CRYPTOCURRENCY\": 41,\n            \"INDICATOR\": 42,\n            \"INDUSTRY\": 1000\n          }\n        },\n        \"OptionType\": {\n          \"values\": {\n            \"CALL\": 0,\n            \"PUT\": 1\n          }\n        },\n        \"MarketHoursType\": {\n          \"values\": {\n            \"PRE_MARKET\": 0,\n            \"REGULAR_MARKET\": 1,\n            \"POST_MARKET\": 2,\n            \"EXTENDED_HOURS_MARKET\": 3\n          }\n        }\n      }\n    }\n  }\n}","export const borderLeft = (1 << 1);\nexport const borderTop = (1 << 2);\nexport const borderRight = (1 << 3);\nexport const borderBottom = (1 << 4);\n\nexport function addBorder(curBorder: number | null, border: number) {\n    if (!curBorder) return border;\n    return curBorder | border;\n}\n\nexport function removeBorder(curBorder: number | null, border: number) {\n    if (!curBorder) return 0;\n    return border ^ curBorder;\n}\nexport function hasBorder(curBorder: number | null, border: number) {\n    if (!curBorder) return false;\n    return border === (border&curBorder);\n}\nexport function hasBorderStr(curBorder: number | null, borderStr: string) {\n    if (!curBorder) return false;\n    let border: number;\n    if (borderStr === 'left') border = borderLeft;\n    else if (borderStr === 'top') border = borderTop;\n    else if (borderStr === 'right') border = borderRight;\n    else if (borderStr === 'bottom') border = borderBottom;\n    else { return 0 };\n    return border === (border&curBorder);\n}\nexport function mkel(tag='div', className='', children?: string) {\n    const el = document.createElement(tag);\n    el.className = className;\n    if (children) {\n        el.innerHTML = children;\n    }\n    return el;\n}","// @ts-ignore\nimport ExpressionParser from 'packages/expressionparser';\n\nfunction rowColToRef(row: number, col: number) {\n    // Validate inputs\n    if (row < 0 || col < 0 || !Number.isInteger(row) || !Number.isInteger(col)) {\n        return '';\n        // throw new Error('Row and column must be non-negative integers');\n    }\n\n    // Convert column index to letters (0 = A, 1 = B, ..., 25 = Z, 26 = AA, etc.)\n    let colLetters = '';\n    let remaining = col + 1; // Convert to 1-based for calculation\n\n    while (remaining > 0) {\n        const remainder = (remaining - 1) % 26;\n        colLetters = String.fromCharCode(65 + remainder) + colLetters;\n        remaining = Math.floor((remaining - 1) / 26);\n    }\n\n    // Convert row index to 1-based number\n    const rowNumber = row + 1;\n\n    return colLetters + rowNumber;\n}\n\nexport function shiftTextRefs(text: string, dir: string) {\n    const deltas: any = {\n        up: [-1, 0], down: [1, 0], left: [0, -1], right: [0, 1]\n    }\n    const delta = deltas[dir];\n    text = text.slice(1); // strip =\n    const tokens = ExpressionParser.tokenizeWithIndex(text);\n    tokens.reverse();\n    let str = '=';\n    for (let i = 0; i < text.length; i++) {\n        while (tokens.length > 0 && !/^[A-Za-z]+\\d+$/.test(tokens[tokens.length - 1][0])) {\n            tokens.pop();\n        }\n        const [token, indexes] = (tokens[tokens.length - 1] || ['', []]);\n        if (i === indexes[0]) {\n            const cell = ExpressionParser.parseCellReference(token);\n            const newRef = rowColToRef(cell.row+delta[0], cell.col+delta[1]);\n            if (!newRef) {\n                str += 'REFERROR'\n            } else {\n                str += newRef;\n            }\n            tokens.pop();\n            i = indexes[1] - 1;\n        } else {\n            str += text[i];\n        }\n    }\n    return str;\n}","export const header = `\n<style>\n    .header-bar {\n        font-family: Arial, sans-serif;\n        background-color: #f3f3f3;\n        padding: 5px;\n        border-bottom: 1px solid #d4d4d4;\n        display: flex;\n        flex-wrap: wrap;\n        z-index: 300;\n    }\n\n    .tab-group {\n        display: flex;\n        margin-right: 15px;\n    }\n\n    .button-group {\n        display: flex;\n        border-right: 1px solid #d4d4d4;\n        padding: 3px 10px 3px 3px;\n        align-items: center;\n    }\n\n    .button {\n        background: none;\n        border: none;\n        padding: 5px 8px;\n        margin: 0 2px;\n        cursor: pointer;\n        border-radius: 3px;\n    }\n\n    .button:hover {\n        background-color: #e0e0e0;\n    }\n\n    .button img {\n        width: 16px;\n        height: 16px;\n    }\n\n    .separator {\n        width: 1px;\n        background-color: #d4d4d4;\n        margin: 0 5px;\n        height: 30px;\n    }\n\n    .dropdown {\n        position: relative;\n        display: inline-block;\n    }\n\n    .dropdown-content {\n        display: none;\n        position: absolute;\n        background-color: #f9f9f9;\n        min-width: 130px;\n        box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n        z-index: 1;\n        font-size: 14px;\n        border: 1px solid #d4d4d4;\n    }\n    .dropdown-content > div {\n        border-bottom: 1px solid #d4d4d4;\n        padding: 2px;\n        cursor: pointer;\n    }\n\n    .dropdown-content > div:last-child {\n        border-bottom: none;\n    }\n\n    .dropdown:hover .dropdown-content {\n        display: block;\n        z-index: 300;\n    }\n</style>\n<div class=\"header-bar\">\n    <!-- Clipboard Group -->\n    <div class=\"button-group quick-text-actions-buttons\">\n        <button class=\"button\" data-action=\"paste\" title=\"Paste\">📋</button>\n        <button class=\"button\" data-action=\"cut\" title=\"Cut\">✂️</button>\n        <button class=\"button\" data-action=\"copy\" title=\"Copy\">📄</button>\n        <div class=\"separator\"></div>\n        <div class=\"dropdown\">\n            <button id=\"format-button\" class=\"button format-button\" title=\"Format Painter\">🖌️</button>\n        </div>\n    </div>\n\n    <!-- Font Group -->\n    <div class=\"button-group\">\n        <div class=\"dropdown\">\n            <button class=\"button\" title=\"Font\">Arial ▼</button>\n            <div class=\"dropdown-content\">\n                <div>Arial</div>\n                <div>Calibri</div>\n                <div>Times New Roman</div>\n            </div>\n        </div>\n        <div class=\"dropdown\">\n            <button class=\"button\" title=\"Font Size\">11 ▼</button>\n        </div>\n        <button class=\"button\" title=\"Bold\">B</button>\n        <button class=\"button\" title=\"Italic\">I</button>\n        <button class=\"button\" title=\"Underline\">U</button>\n        <div class=\"separator\"></div>\n        <button class=\"button\" title=\"Border\">⧉</button>\n        <div class=\"dropdown\">\n            <button class=\"button\" title=\"Fill Color\">▣</button>\n        </div>\n        <div class=\"dropdown\">\n            <button class=\"button\" title=\"Font Color\">A</button>\n        </div>\n    </div>\n\n    <!-- Alignment Group -->\n    <div class=\"button-group align-button-group\">\n        <button class=\"button\" data-align=\"left\" title=\"Align Left\">≡</button>\n        <button class=\"button\" data-align=\"center\" title=\"Align Center\">≡</button>\n        <button class=\"button\" data-align=\"right\" title=\"Align Right\">≡</button>\n        <div class=\"separator\"></div>\n        <button class=\"button merge-button\" title=\"Merge & Center\" id=\"merge-button\">⧉ M</button>\n    </div>\n\n    <!-- Editing Group -->\n    <div class=\"button-group\">\n        <div class=\"dropdown\">\n            <button class=\"button\" title=\"Insert\">⊕ Insert</button>\n        </div>\n        <div class=\"dropdown\">\n            <button class=\"button\" title=\"Delete\">⊖ Delete</button>\n        </div>\n        <div class=\"separator\"></div>\n        <div class=\"dropdown\">\n            <button class=\"button\" title=\"Conditional Formatting\">☰ Format</button>\n        </div>\n    </div>\n</div>\n`","import { mkel } from \"../utils\";\n\nconst menuItems = [\n    { key: 'copy', title: 'Copy', label: 'Ctrl+C' },\n    { key: 'cut', title: 'Cut', label: 'Ctrl+X' },\n    { key: 'paste', title: 'Paste', label: 'Ctrl+V' },\n    { key: 'paste-value', title: 'Paste values only', label: 'Ctrl+Shift+V' },\n    { key: 'paste-format', title: 'Paste format only', label: 'Ctrl+Alt+V' },\n    { key: 'divider' },\n    { key: 'insert-row', title: 'Insert row' },\n    { key: 'insert-column', title: 'Insert column' },\n    { key: 'divider' },\n    { key: 'merge', title: 'Merge' },\n    { key: 'unmerge', title: 'Unmerge' },\n    { key: 'divider' },\n    { key: 'delete-row', title: 'Delete row' },\n    { key: 'delete-column', title: 'Delete column' },\n    { key: 'delete-cell-text', title: 'Delete cell text' },\n    { key: 'clear', title: 'Clear Contents', label: '' },\n    { key: 'divider' },\n    { key: 'toggle-gridlines', title: 'Toggle Gridlines' },\n];\n\nfunction buildMenuItem(item: any) {\n    if (item.key === 'divider') {\n        return mkel('div', `gigasheet-item divider`);\n    }\n    const el = mkel('div', `gigasheet-item`, `\n        ${item.title}\n        <div class=\"label\">${item.label||''}</div>\n    `);\n    el.setAttribute('data-key', item.key);\n    return el;\n}\n\nfunction buildMenu(menuItems: any) {\n    return menuItems.map((it: any) => buildMenuItem(it));\n}\n\nexport default class ContextMenu {\n    menuItems: any;\n    container: any;\n    clickCb: Function | undefined;\n    constructor() {\n        this.menuItems = buildMenu(menuItems);\n        this.container = mkel('div', 'gigasheet-contextmenu');\n        this.container.oncontextmenu = ((e:any)=> e.preventDefault());\n        this.container.style.display = 'none';\n        for (let child of this.menuItems) {\n            this.container.appendChild(child);\n        }\n        this.container.onclick = (e: any) => {\n            if (e.target.hasAttribute('data-key')) {\n                const action = e.target.getAttribute('data-key');\n                if (this.clickCb) this.clickCb(action);\n                this.hide();\n            }\n        }\n    }\n\n    onClick(fn: Function) {\n        this.clickCb = fn;\n    }\n\n\n    hide() {\n        this.container.style.display = 'none';\n    }\n\n    setPosition(x: number, y: number, containerRect: any) {\n        const {width, height} = containerRect;\n        const ctxrect = this.container.getBoundingClientRect();\n        const ctxwidth = ctxrect.width;\n        const vhf = height / 2;\n        let left = x;\n        if (width - x <= ctxwidth) {\n            left -= ctxwidth;\n        }\n        this.container.style.left = `${left}px`;\n        if (y > vhf) {\n            this.container.style.bottom = `${height-y}px`;\n            this.container.style.maxHeight = `${y}px`;\n            this.container.style.top = 'auto';\n        } else {\n            this.container.style.top = `${y}px`;\n            this.container.style.maxHeight = `${height - y}px`;\n            this.container.style.bottom = 'auto';\n        }\n\n        this.container.style.display = '';\n    }\n}\n"],"names":[],"version":3,"file":"gigaspreadsheet.c9112ede.js.map","sourceRoot":"/__parcel_source_root/"}